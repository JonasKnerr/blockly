../blocks/class.js:7: WARNING - [JSC_USELESS_CODE] Suspicious code. Is there a missing '+' on the previous line?
("use strict");
 ^^^^^^^^^^^^

../blocks/class.js:11: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.appendDummyInput()
    ^^^^

../blocks/class.js:13: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      .appendField(this.id, "NAME");
                   ^^^^

../blocks/class.js:14: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.args = 0;
    ^^^^

../blocks/class.js:15: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.argNames = [];
    ^^^^

../blocks/class.js:16: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setOutput(true, this.getFieldValue("NAME"));
    ^^^^

../blocks/class.js:16: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setOutput(true, this.getFieldValue("NAME"));
                         ^^^^

../blocks/class.js:17: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setTooltip("");
    ^^^^

../blocks/class.js:18: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setHelpUrl("");
    ^^^^

../blocks/class.js:19: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.initColour();
    ^^^^

../blocks/class.js:22: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    let className = this.inputList[0].fieldRow[1].text_;
                    ^^^^

../blocks/class.js:25: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.setColour(classBlock.getColour());
      ^^^^

../blocks/class.js:29: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setOutput(true, newName);
    ^^^^

../blocks/class.js:32: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return this.getFieldValue("NAME");
           ^^^^

../blocks/class.js:36: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return [this.getClassName(), this.getFieldValue("INSTANCE")];
            ^^^^

../blocks/class.js:36: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return [this.getClassName(), this.getFieldValue("INSTANCE")];
                                 ^^^^

../blocks/class.js:39: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return this.constr;
           ^^^^

../blocks/class.js:42: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (!this.getInputsInline()) {
         ^^^^

../blocks/class.js:44: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.changeOutput(this.getFieldValue("NAME"));
    ^^^^

../blocks/class.js:44: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.changeOutput(this.getFieldValue("NAME"));
                      ^^^^

../blocks/class.js:50: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    var constr = Blockly.Class.getConstructor(this.workspace, this.getClassName());
                                              ^^^^

../blocks/class.js:50: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    var constr = Blockly.Class.getConstructor(this.workspace, this.getClassName());
                                                              ^^^^

../blocks/class.js:51: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.constr = constr;
    ^^^^

../blocks/class.js:54: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      if (this.args != args.length) {
          ^^^^

../blocks/class.js:55: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        if (this.args > args.length) {
            ^^^^

../blocks/class.js:56: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          while (this.args > args.length) {
                 ^^^^

../blocks/class.js:57: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
            this.args--;
            ^^^^

../blocks/class.js:58: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
            this.removeInput("ARG" + this.args);
            ^^^^

../blocks/class.js:58: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
            this.removeInput("ARG" + this.args);
                                     ^^^^

../blocks/class.js:61: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.appendValueInput("ARG" + this.args).appendField(args[this.args]);
          ^^^^

../blocks/class.js:61: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.appendValueInput("ARG" + this.args).appendField(args[this.args]);
                                        ^^^^

../blocks/class.js:61: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.appendValueInput("ARG" + this.args).appendField(args[this.args]);
                                                                    ^^^^

../blocks/class.js:62: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.args++;
          ^^^^

../blocks/class.js:65: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      var count = Blockly.Class.arraysEqual(this.argNames, args);
                                            ^^^^

../blocks/class.js:67: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.removeInput("ARG" + count);
        ^^^^

../blocks/class.js:68: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.appendValueInput("ARG" + count).appendField(args[count]);
        ^^^^

../blocks/class.js:70: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        if (this.getInput("ARG" + countInc)) this.moveInputBefore("ARG" + count, "ARG" + countInc);
            ^^^^

../blocks/class.js:70: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        if (this.getInput("ARG" + countInc)) this.moveInputBefore("ARG" + count, "ARG" + countInc);
                                             ^^^^

../blocks/class.js:72: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.argNames = args;
      ^^^^

../blocks/class.js:80: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (Blockly.Names.equals(oldName, this.getClassName())) {
                                      ^^^^

../blocks/class.js:81: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.setFieldValue(newName, "NAME");
      ^^^^

../blocks/class.js:86: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    container.setAttribute("name", this.getClassName());
                                   ^^^^

../blocks/class.js:91: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.renameClass(this.getClassName(), name);
    ^^^^

../blocks/class.js:91: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.renameClass(this.getClassName(), name);
                     ^^^^

../blocks/class.js:92: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.initColour();
    ^^^^

../blocks/class.js:106: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.appendDummyInput()
    ^^^^

../blocks/class.js:109: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.appendDummyInput("METHODS").appendField("Methoden");
    ^^^^

../blocks/class.js:114: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setColour(Blockly.Class.colour());
    ^^^^

../blocks/class.js:115: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setConstructor(true);
    ^^^^

../blocks/class.js:116: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setMutator(new Blockly.Mutator(["class_attribute"], this));
    ^^^^

../blocks/class.js:116: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Mutator: called with 2 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    this.setMutator(new Blockly.Mutator(["class_attribute"], this));
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/class.js:117: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.attributeCount = 0;
    ^^^^

../blocks/class.js:118: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.methods = [];
    ^^^^

../blocks/class.js:119: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.attributeInputs = [];
    ^^^^

../blocks/class.js:120: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.oldName = "";
    ^^^^

../blocks/class.js:121: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.hasConstr = true;
    ^^^^

../blocks/class.js:122: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.statementConnection_ = null;
    ^^^^

../blocks/class.js:123: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setTooltip("");
    ^^^^

../blocks/class.js:124: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setHelpUrl("");
    ^^^^

../blocks/class.js:127: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (!this.isInFlyout) {
         ^^^^

../blocks/class.js:134: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      while (this.getInput("METHODS" + counter)) {
             ^^^^

../blocks/class.js:136: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        if (!this.getInputTargetBlock("METHODS" + counter)) {
             ^^^^

../blocks/class.js:137: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.removeInput("METHODS" + counter);
          ^^^^

../blocks/class.js:143: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        if (this.getInputTargetBlock("METHODS" + counter)) {
            ^^^^

../blocks/class.js:144: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          methods.push(this.getInputTargetBlock("METHODS" + counter));
                       ^^^^

../blocks/class.js:150: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.appendStatementInput("METHODS" + removed).setCheck([
        ^^^^

../blocks/class.js:154: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      } else if (!this.getInput("METHODS0")) {
                  ^^^^

../blocks/class.js:155: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.appendStatementInput("METHODS0").setCheck([
        ^^^^

../blocks/class.js:159: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      } else if (!this.getInput("METHODS" + counter)) {
                  ^^^^

../blocks/class.js:160: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.appendStatementInput("METHODS" + counter).setCheck([
        ^^^^

../blocks/class.js:165: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.methods = methods;
      ^^^^

../blocks/class.js:167: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.changeScope();
      ^^^^

../blocks/class.js:173: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    while (attributeCount <= this.attributeCount) {
                             ^^^^

../blocks/class.js:175: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      if (this.getInputTargetBlock("attribute" + attributeCount)) {
          ^^^^

../blocks/class.js:176: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        var type = this.getInputTargetBlock("attribute" + attributeCount).inputList[0].fieldRow[0]
                   ^^^^

../blocks/class.js:178: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        var name = this.getInputTargetBlock("attribute" + attributeCount).inputList[0].fieldRow[0]
                   ^^^^

../blocks/class.js:180: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.workspace.changeVariableScope(name, this.oldName, this.getClassDef(), type);
        ^^^^

../blocks/class.js:180: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.workspace.changeVariableScope(name, this.oldName, this.getClassDef(), type);
                                                 ^^^^

../blocks/class.js:180: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.workspace.changeVariableScope(name, this.oldName, this.getClassDef(), type);
                                                               ^^^^

../blocks/class.js:185: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (this.attributeInputs.length > attributeInputs.length) {
        ^^^^

../blocks/class.js:186: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      var changedInput = this.attributeInputs.filter(x => !attributeInputs.includes(x));
                         ^^^^

../blocks/class.js:187: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.workspace.changeVariableScope(changedInput[0], this.oldName, "global");
      ^^^^

../blocks/class.js:187: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.workspace.changeVariableScope(changedInput[0], this.oldName, "global");
                                                          ^^^^

../blocks/class.js:189: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.attributeInputs = attributeInputs;
    ^^^^

../blocks/class.js:199: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    topBlock.setFieldValue(this.hasConstr ? "TRUE" : "FALSE", "CONSTR");
                           ^^^^

../blocks/class.js:202: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    for (var j = 1; j <= this.attributeCount; j++) {
                         ^^^^

../blocks/class.js:212: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    for (var i = this.attributeCount; i > 0; i--) {
                 ^^^^

../blocks/class.js:213: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      inputBlocks.push(this.getInputTargetBlock("attribute" + i));
                       ^^^^

../blocks/class.js:214: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.removeInput("attribute" + i);
      ^^^^

../blocks/class.js:216: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.attributeCount = 0;
    ^^^^

../blocks/class.js:223: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.attributeCount++;
        ^^^^

../blocks/class.js:224: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        var attributeInput = this.appendValueInput("attribute" + this.attributeCount)
                             ^^^^

../blocks/class.js:224: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        var attributeInput = this.appendValueInput("attribute" + this.attributeCount)
                                                                 ^^^^

../blocks/class.js:230: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        if (this.hasConstr) {
            ^^^^

../blocks/class.js:231: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.moveInputBefore("attribute" + this.attributeCount, "CONSTRUCTOR");
          ^^^^

../blocks/class.js:231: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.moveInputBefore("attribute" + this.attributeCount, "CONSTRUCTOR");
                                             ^^^^

../blocks/class.js:233: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.moveInputBefore("attribute" + this.attributeCount, "METHODS");
          ^^^^

../blocks/class.js:233: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.moveInputBefore("attribute" + this.attributeCount, "METHODS");
                                             ^^^^

../blocks/class.js:243: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      if (this.hasConstr != hasConstr) {
          ^^^^

../blocks/class.js:245: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.setConstructor(true);
          ^^^^

../blocks/class.js:248: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          Blockly.Mutator.reconnect(this.statementConnection_, this, "CONSTRUCTOR");
                                    ^^^^

../blocks/class.js:249: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.statementConnection_ = null;
          ^^^^

../blocks/class.js:252: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          var stackConnection = this.getInput("CONSTRUCTOR").connection;
                                ^^^^

../blocks/class.js:253: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.statementConnection_ = stackConnection.targetConnection;
          ^^^^

../blocks/class.js:254: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          if (this.statementConnection_) {
              ^^^^

../blocks/class.js:259: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.setConstructor(false);
          ^^^^

../blocks/class.js:262: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.hasConstr = hasConstr;
        ^^^^

../blocks/class.js:268: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.appendStatementInput("CONSTRUCTOR")
      ^^^^

../blocks/class.js:271: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.moveInputBefore("CONSTRUCTOR", "METHODS");
      ^^^^

../blocks/class.js:273: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.removeInput("CONSTRUCTOR");
      ^^^^

../blocks/class.js:277: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (!this.atrributeCount && !this.methods.length) {
         ^^^^

../blocks/class.js:277: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (!this.atrributeCount && !this.methods.length) {
                                 ^^^^

../blocks/class.js:281: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (this.attributeCount) {
        ^^^^

../blocks/class.js:282: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      container.setAttribute("attribute", this.attributeCount);
                                          ^^^^

../blocks/class.js:287: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.atrributeCount = parseInt(xmlElement.getAttribute("attribute"), 10) || 0;
    ^^^^

../blocks/class.js:288: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    for (var i = 1; i < this.attributeCount; i++) {
                        ^^^^

../blocks/class.js:289: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.appendValueInput("attribute" + i)
      ^^^^

../blocks/class.js:295: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return this.attributeInputs;
           ^^^^

../blocks/class.js:298: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return this.getFieldValue("NAME");
           ^^^^

../blocks/class.js:301: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return this.methods;
           ^^^^

../blocks/class.js:304: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return this.getInputTargetBlock("CONSTRUCTOR");
           ^^^^

../blocks/class.js:313: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.appendDummyInput()
    ^^^^

../blocks/class.js:316: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"]));
    ^^^^

../blocks/class.js:318: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      (this.workspace.options.comments ||
       ^^^^

../blocks/class.js:319: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        (this.workspace.options.parentWorkspace &&
         ^^^^

../blocks/class.js:320: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.workspace.options.parentWorkspace.options.comments)) &&
          ^^^^

../blocks/class.js:323: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.setCommentText(Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"]);
      ^^^^

../blocks/class.js:325: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setNextStatement(false);
    ^^^^

../blocks/class.js:326: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setPreviousStatement(true);
    ^^^^

../blocks/class.js:327: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setColour(Blockly.Msg["PROCEDURES_HUE"]);
    ^^^^

../blocks/class.js:328: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setTooltip(Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"]);
    ^^^^

../blocks/class.js:329: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setHelpUrl(Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"]);
    ^^^^

../blocks/class.js:330: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.arguments_ = [];
    ^^^^

../blocks/class.js:331: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.argumentVarModels_ = [];
    ^^^^

../blocks/class.js:332: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setStatements_(true);
    ^^^^

../blocks/class.js:333: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.statementConnection_ = null;
    ^^^^

../blocks/class.js:336: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (this.hasStatements_ === hasStatements) {
        ^^^^

../blocks/class.js:340: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.appendStatementInput("STACK").appendField(Blockly.Msg["PROCEDURES_DEFNORETURN_DO"]);
      ^^^^

../blocks/class.js:341: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      if (this.getInput("RETURN")) {
          ^^^^

../blocks/class.js:342: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        this.moveInputBefore("STACK", "RETURN");
        ^^^^

../blocks/class.js:345: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.removeInput("STACK", true);
      ^^^^

../blocks/class.js:347: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.hasStatements_ = hasStatements;
    ^^^^

../blocks/class.js:379: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Element.prototype.setAttribute does not match formal parameter
found   : (null|string)
required: (TrustedHTML|TrustedScriptURL|TrustedURL|boolean|number|string)
      container.setAttribute("name", this.getFieldValue("NAME"));
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/class.js:424: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateParams_ never defined on Blockly.Block
    this.updateParams_();
         ^^^^^^^^^^^^^

../blocks/class.js:428: WARNING - [JSC_INEXISTENT_PROPERTY] Property setStatements_ never defined on Blockly.Block
    this.setStatements_(xmlElement.getAttribute("statements") !== "false");
         ^^^^^^^^^^^^^^

../blocks/class.js:437: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.newBlock: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
    var containerBlock = workspace.newBlock("procedures_mutatorcontainer", false, this);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/class.js:437: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Workspace.prototype.newBlock does not match formal parameter
found   : boolean
required: (string|undefined)
    var containerBlock = workspace.newBlock("procedures_mutatorcontainer", false, this);
                                                                           ^^^^^

../blocks/class.js:455: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.prototype.connect does not match formal parameter
found   : (Blockly.Connection|null)
required: Blockly.Connection
      connection.connect(paramBlock.previousConnection);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/class.js:476: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Workspace.prototype.getVariable does not match formal parameter
found   : (null|string)
required: string
      var variable = this.workspace.getVariable(varName, "");
                                                ^^^^^^^

../blocks/class.js:486: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateParams_ never defined on Blockly.Block
    this.updateParams_();
         ^^^^^^^^^^^^^

../blocks/class.js:495: WARNING - [JSC_INEXISTENT_PROPERTY] Property setStatements_ never defined on Blockly.Block
          this.setStatements_(true);
               ^^^^^^^^^^^^^^

../blocks/class.js:506: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property bumpNeighbours_ of Blockly.Block not allowed here.
            stackBlock.bumpNeighbours_();
            ^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/class.js:508: WARNING - [JSC_INEXISTENT_PROPERTY] Property setStatements_ never defined on Blockly.Block
          this.setStatements_(false);
               ^^^^^^^^^^^^^^

../blocks/class.js:568: WARNING - [JSC_INEXISTENT_PROPERTY] Property displayRenamedVar_ never defined on Blockly.Block
      this.displayRenamedVar_(oldName, newVar.name);
           ^^^^^^^^^^^^^^^^^^

../blocks/class.js:591: WARNING - [JSC_INEXISTENT_PROPERTY] Property displayRenamedVar_ never defined on Blockly.Block
      this.displayRenamedVar_(oldName, newName);
           ^^^^^^^^^^^^^^^^^^

../blocks/class.js:602: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.updateParams_();
    ^^^^

../blocks/class.js:604: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (this.mutator.isVisible()) {
        ^^^^

../blocks/class.js:605: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      var blocks = this.mutator.workspace_.getAllBlocks(false);
                   ^^^^

../blocks/class.js:630: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Element.prototype.setAttribute does not match formal parameter
found   : (null|string)
required: (TrustedHTML|TrustedScriptURL|TrustedURL|boolean|number|string)
    xmlMutation.setAttribute("name", name);
                                     ^^^^

../blocks/class.js:637: WARNING - [JSC_INEXISTENT_PROPERTY] Property callType_ never defined on Blockly.Block
    xmlBlock.setAttribute("type", this.callType_);
                                       ^^^^^^^^^

../blocks/class.js:645: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: option
        var option = { enabled: true };
            ^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/class.js:647: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: name
        var name = argVar.name;
            ^^^^^^^^^^^^^^^^^^

../blocks/class.js:651: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: xmlBlock
        var xmlBlock = document.createElement("block");
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/class.js:666: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setInput(nameField);
    ^^^^

../blocks/class.js:667: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.appendValueInput("RETURN")
    ^^^^

../blocks/class.js:670: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"]));
    ^^^^

../blocks/class.js:672: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      (this.workspace.options.comments ||
       ^^^^

../blocks/class.js:673: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        (this.workspace.options.parentWorkspace &&
         ^^^^

../blocks/class.js:674: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.workspace.options.parentWorkspace.options.comments)) &&
          ^^^^

../blocks/class.js:677: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.setCommentText(Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"]);
      ^^^^

../blocks/class.js:679: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setNextStatement(false);
    ^^^^

../blocks/class.js:680: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setPreviousStatement(true, ["class_function_noreturn", "class_function_return"]);
    ^^^^

../blocks/class.js:681: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setColour(Blockly.Msg["PROCEDURES_HUE"]);
    ^^^^

../blocks/class.js:682: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setTooltip(Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"]);
    ^^^^

../blocks/class.js:683: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setHelpUrl(Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"]);
    ^^^^

../blocks/class.js:684: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.arguments_ = [];
    ^^^^

../blocks/class.js:685: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.argumentVarModels_ = [];
    ^^^^

../blocks/class.js:686: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setStatements_(true);
    ^^^^

../blocks/class.js:687: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.statementConnection_ = null;
    ^^^^

../blocks/class.js:690: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (this.isInFlyout) {
        ^^^^

../blocks/class.js:691: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.appendDummyInput()
      ^^^^

../blocks/class.js:696: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.appendDummyInput()
      ^^^^

../blocks/class.js:709: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return [this.getFieldValue("NAME"), this.arguments_, true];
            ^^^^

../blocks/class.js:709: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return [this.getFieldValue("NAME"), this.arguments_, true];
                                        ^^^^

../blocks/class.js:723: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setInput(nameField);
    ^^^^

../blocks/class.js:724: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"]));
    ^^^^

../blocks/class.js:726: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      (this.workspace.options.comments ||
       ^^^^

../blocks/class.js:727: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
        (this.workspace.options.parentWorkspace &&
         ^^^^

../blocks/class.js:728: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
          this.workspace.options.parentWorkspace.options.comments)) &&
          ^^^^

../blocks/class.js:731: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.setCommentText(Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"]);
      ^^^^

../blocks/class.js:733: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setNextStatement(false);
    ^^^^

../blocks/class.js:734: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setPreviousStatement(true, ["class_function_noreturn", "class_function_return"]);
    ^^^^

../blocks/class.js:735: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setColour(Blockly.Msg["PROCEDURES_HUE"]);
    ^^^^

../blocks/class.js:736: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setTooltip(Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"]);
    ^^^^

../blocks/class.js:737: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setHelpUrl(Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"]);
    ^^^^

../blocks/class.js:738: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.arguments_ = [];
    ^^^^

../blocks/class.js:739: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.argumentVarModels_ = [];
    ^^^^

../blocks/class.js:740: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setStatements_(true);
    ^^^^

../blocks/class.js:741: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.statementConnection_ = null;
    ^^^^

../blocks/class.js:752: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return [this.getFieldValue("NAME"), this.arguments_, false];
            ^^^^

../blocks/class.js:752: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    return [this.getFieldValue("NAME"), this.arguments_, false];
                                        ^^^^

../blocks/class.js:763: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.appendValueInput("NAME")
    ^^^^

../blocks/class.js:766: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setPreviousStatement(true, null);
    ^^^^

../blocks/class.js:767: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setNextStatement(true, null);
    ^^^^

../blocks/class.js:768: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.initColour();
    ^^^^

../blocks/class.js:769: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setTooltip("");
    ^^^^

../blocks/class.js:770: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setHelpUrl("");
    ^^^^

../blocks/class.js:771: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.contextMenu = false;
    ^^^^

../blocks/class.js:774: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (this.mutatorParentBlock) {
        ^^^^

../blocks/class.js:775: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      var currentBlock = this.mutatorParentBlock;
                         ^^^^

../blocks/class.js:778: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.setColour(classBlock.getColour());
      ^^^^

../blocks/class.js:780: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      this.setColour(20);
      ^^^^

../blocks/class.js:786: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.appendDummyInput().appendField("class");
    ^^^^

../blocks/class.js:787: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.appendStatementInput("STACK");
    ^^^^

../blocks/class.js:788: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.appendDummyInput("CONSTR_INPUT")
    ^^^^

../blocks/class.js:791: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.initColour();
    ^^^^

../blocks/class.js:792: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setTooltip("");
    ^^^^

../blocks/class.js:793: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setHelpUrl("");
    ^^^^

../blocks/class.js:794: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.contextMenu = false;
    ^^^^

../blocks/class.js:797: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    var currentBlock = this.mutatorParentBlock;
                       ^^^^

../blocks/class.js:800: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.setColour(classBlock.getColour());
    ^^^^

../blocks/logic.js:334: WARNING - [JSC_INEXISTENT_PROPERTY] Property rebuildShape_ never defined on Blockly.Block
    this.rebuildShape_();
         ^^^^^^^^^^^^^

../blocks/logic.js:349: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.prototype.connect does not match formal parameter
found   : (Blockly.Connection|null)
required: Blockly.Connection
      connection.connect(elseifBlock.previousConnection);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/logic.js:355: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.prototype.connect does not match formal parameter
found   : (Blockly.Connection|null)
required: Blockly.Connection
      connection.connect(elseBlock.previousConnection);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/logic.js:389: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateShape_ never defined on Blockly.Block
    this.updateShape_();
         ^^^^^^^^^^^^

../blocks/logic.js:391: WARNING - [JSC_INEXISTENT_PROPERTY] Property reconnectChildBlocks_ never defined on Blockly.Block
    this.reconnectChildBlocks_(valueConnections, statementConnections,
         ^^^^^^^^^^^^^^^^^^^^^

../blocks/logic.js:433: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (this.getInput('ELSE')) {
        ^^^^

../blocks/logic.js:434: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      elseStatementConnection = this.getInput('ELSE').connection.targetConnection;
                                ^^^^

../blocks/logic.js:437: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    while (this.getInput('IF' + i)) {
           ^^^^

../blocks/logic.js:438: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      var inputIf = this.getInput('IF' + i);
                    ^^^^

../blocks/logic.js:439: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      var inputDo = this.getInput('DO' + i);
                    ^^^^

../blocks/logic.js:444: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.updateShape_();
    ^^^^

../blocks/logic.js:445: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.reconnectChildBlocks_(valueConnections, statementConnections,
    ^^^^

../blocks/logic.js:465: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: i
    for (var i = 1; i <= this.elseifCount_; i++) {
             ^^^^^

../blocks/logic.js:488: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    for (var i = 1; i <= this.elseifCount_; i++) {
                         ^^^^

../blocks/logic.js:497: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Extensions.registerMutator does not match formal parameter
found   : null
required: (function(): ?|undefined)
    Blockly.Constants.Logic.CONTROLS_IF_MUTATOR_MIXIN, null,
                                                       ^^^^

../blocks/logic.js:548: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property checkType_ of Blockly.Connection not allowed here.
        !blockA.outputConnection.checkType_(blockB.outputConnection)) {
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/logic.js:548: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.prototype.checkType_ does not match formal parameter
found   : (Blockly.Connection|null)
required: Blockly.Connection
        !blockA.outputConnection.checkType_(blockB.outputConnection)) {
                                            ^^^^^^^^^^^^^^^^^^^^^^^

../blocks/logic.js:568: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property bumpNeighbours_ of Blockly.Block not allowed here.
      this.bumpNeighbours_();
      ^^^^^^^^^^^^^^^^^^^^

../blocks/logic.js:615: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property checkType_ of Blockly.Connection not allowed here.
        if (block && !block.outputConnection.checkType_(parentConnection)) {
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/logic.js:623: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property bumpNeighbours_ of Blockly.Block not allowed here.
            block.bumpNeighbours_();
            ^^^^^^^^^^^^^^^^^^^^^

../blocks/loops.js:314: WARNING - [JSC_INEXISTENT_PARAM] parameter e does not appear in Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.onchange's parameter list
  onchange: function(/* e */) {
            ^^^^^^^^^^^^^^^^^^^

../blocks/loops.js:322: WARNING - [JSC_INEXISTENT_PROPERTY] Property LOOP_TYPES never defined on Blockly.Block
      if (this.LOOP_TYPES.indexOf(block.type) != -1) {
               ^^^^^^^^^^

../blocks/math.js:475: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateShape_ never defined on Blockly.Block
    this.updateShape_(divisorInput);
         ^^^^^^^^^^^^

../blocks/math.js:549: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Element.prototype.setAttribute does not match formal parameter
found   : (null|string)
required: (TrustedHTML|TrustedScriptURL|TrustedURL|boolean|number|string)
    container.setAttribute('op', this.getFieldValue('OP'));
                                 ^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/math.js:558: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateType_ never defined on Blockly.Block
    this.updateType_(xmlElement.getAttribute('op'));
         ^^^^^^^^^^^

../blocks/math.js:570: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateType_ never defined on Blockly.Block
    this.updateType_(newOp);
         ^^^^^^^^^^^

../blocks/procedures.js:58: WARNING - [JSC_INEXISTENT_PROPERTY] Property setStatements_ never defined on Blockly.Block
    this.setStatements_(true);
         ^^^^^^^^^^^^^^

../blocks/procedures.js:110: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Element.prototype.setAttribute does not match formal parameter
found   : (null|string)
required: (TrustedHTML|TrustedScriptURL|TrustedURL|boolean|number|string)
      container.setAttribute("name", this.getFieldValue("NAME"));
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:155: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateParams_ never defined on Blockly.Block
    this.updateParams_();
         ^^^^^^^^^^^^^

../blocks/procedures.js:159: WARNING - [JSC_INEXISTENT_PROPERTY] Property setStatements_ never defined on Blockly.Block
    this.setStatements_(xmlElement.getAttribute("statements") !== "false");
         ^^^^^^^^^^^^^^

../blocks/procedures.js:168: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.newBlock: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
    var containerBlock = workspace.newBlock("procedures_mutatorcontainer", false, this);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:168: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Workspace.prototype.newBlock does not match formal parameter
found   : boolean
required: (string|undefined)
    var containerBlock = workspace.newBlock("procedures_mutatorcontainer", false, this);
                                                                           ^^^^^

../blocks/procedures.js:186: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.prototype.connect does not match formal parameter
found   : (Blockly.Connection|null)
required: Blockly.Connection
      connection.connect(paramBlock.previousConnection);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:207: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Workspace.prototype.getVariable does not match formal parameter
found   : (null|string)
required: string
      var variable = this.workspace.getVariable(varName, "");
                                                ^^^^^^^

../blocks/procedures.js:217: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateParams_ never defined on Blockly.Block
    this.updateParams_();
         ^^^^^^^^^^^^^

../blocks/procedures.js:226: WARNING - [JSC_INEXISTENT_PROPERTY] Property setStatements_ never defined on Blockly.Block
          this.setStatements_(true);
               ^^^^^^^^^^^^^^

../blocks/procedures.js:237: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property bumpNeighbours_ of Blockly.Block not allowed here.
            stackBlock.bumpNeighbours_();
            ^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:239: WARNING - [JSC_INEXISTENT_PROPERTY] Property setStatements_ never defined on Blockly.Block
          this.setStatements_(false);
               ^^^^^^^^^^^^^^

../blocks/procedures.js:299: WARNING - [JSC_INEXISTENT_PROPERTY] Property displayRenamedVar_ never defined on Blockly.Block
      this.displayRenamedVar_(oldName, newVar.name);
           ^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:322: WARNING - [JSC_INEXISTENT_PROPERTY] Property displayRenamedVar_ never defined on Blockly.Block
      this.displayRenamedVar_(oldName, newName);
           ^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:333: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.updateParams_();
    ^^^^

../blocks/procedures.js:335: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    if (this.mutator.isVisible()) {
        ^^^^

../blocks/procedures.js:336: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
      var blocks = this.mutator.workspace_.getAllBlocks(false);
                   ^^^^

../blocks/procedures.js:361: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Element.prototype.setAttribute does not match formal parameter
found   : (null|string)
required: (TrustedHTML|TrustedScriptURL|TrustedURL|boolean|number|string)
    xmlMutation.setAttribute("name", name);
                                     ^^^^

../blocks/procedures.js:368: WARNING - [JSC_INEXISTENT_PROPERTY] Property callType_ never defined on Blockly.Block
    xmlBlock.setAttribute("type", this.callType_);
                                       ^^^^^^^^^

../blocks/procedures.js:376: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: option
        var option = { enabled: true };
            ^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:378: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: name
        var name = argVar.name;
            ^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:382: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: xmlBlock
        var xmlBlock = document.createElement("block");
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:422: WARNING - [JSC_INEXISTENT_PROPERTY] Property setStatements_ never defined on Blockly.Block
    this.setStatements_(true);
         ^^^^^^^^^^^^^^

../blocks/procedures.js:480: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.getAllBlocks: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    var blocks = this.workspace.getAllBlocks();
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:508: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Workspace.prototype.getVariable does not match formal parameter
found   : (null|string)
required: string
    var variable = this.workspace.getVariable(varName);
                                              ^^^^^^^

../blocks/procedures.js:512: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Workspace.prototype.createVariable does not match formal parameter
found   : (null|string)
required: string
      variable = this.workspace.createVariable(varName);
                                               ^^^^^^^

../blocks/procedures.js:539: WARNING - [JSC_INEXISTENT_PROPERTY] Property validator_ never defined on Blockly.Block
    var field = new Blockly.FieldTextInput("x", this.validator_);
                                                     ^^^^^^^^^^

../blocks/procedures.js:542: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property showEditor_ of Blockly.FieldTextInput not allowed here.
    field.oldShowEditorFn_ = field.showEditor_;
                             ^^^^^^^^^^^^^^^^^

../blocks/procedures.js:547: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property showEditor_ of Blockly.FieldTextInput not allowed here.
    field.showEditor_ = newShowEditorFn;
    ^^^^^^^^^^^^^^^^^

../blocks/procedures.js:560: WARNING - [JSC_INEXISTENT_PROPERTY] Property deleteIntermediateVars_ never defined on Blockly.Block
    field.onFinishEditing_ = this.deleteIntermediateVars_;
                                  ^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:578: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.FieldTextInput not allowed here.
    var outerWs = Blockly.Mutator.findParentWs(this.sourceBlock_.workspace);
                                               ^^^^^^^^^^^^^^^^^

../blocks/procedures.js:584: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.FieldTextInput not allowed here.
    var blocks = this.sourceBlock_.workspace.getAllBlocks();
                 ^^^^^^^^^^^^^^^^^

../blocks/procedures.js:584: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.getAllBlocks: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    var blocks = this.sourceBlock_.workspace.getAllBlocks();
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:586: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.FieldTextInput not allowed here.
      if (blocks[i].id == this.sourceBlock_.id) {
                          ^^^^^^^^^^^^^^^^^

../blocks/procedures.js:596: WARNING - [JSC_INEXISTENT_PROPERTY] Property renameVarById never defined on Blockly.Workspace
      outerWs.renameVarById(model.getId(), varName);
              ^^^^^^^^^^^^^

../blocks/procedures.js:615: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.FieldTextInput not allowed here.
    var outerWs = Blockly.Mutator.findParentWs(this.sourceBlock_.workspace);
                                               ^^^^^^^^^^^^^^^^^

../blocks/procedures.js:664: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureCall never defined on Blockly.Block
    if (Blockly.Names.equals(oldName, this.getProcedureCall())) {
                                           ^^^^^^^^^^^^^^^^

../blocks/procedures.js:691: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureCall never defined on Blockly.Block
    var defBlock = Blockly.Procedures.getDefinition(this.getProcedureCall(), this.workspace);
                                                         ^^^^^^^^^^^^^^^^

../blocks/procedures.js:729: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property bumpNeighbours_ of Blockly.Block not allowed here.
          connection.getSourceBlock().bumpNeighbours_();
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:740: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Variables.getOrCreateVariablePackage does not match formal parameter
found   : null
required: string
        null,
        ^^^^

../blocks/procedures.js:747: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateShape_ never defined on Blockly.Block
    this.updateShape_();
         ^^^^^^^^^^^^

../blocks/procedures.js:822: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureCall never defined on Blockly.Block
    container.setAttribute("name", this.getProcedureCall());
                                        ^^^^^^^^^^^^^^^^

../blocks/procedures.js:837: WARNING - [JSC_INEXISTENT_PROPERTY] Property renameProcedure never defined on Blockly.Block
    this.renameProcedure(this.getProcedureCall(), name);
         ^^^^^^^^^^^^^^^

../blocks/procedures.js:837: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureCall never defined on Blockly.Block
    this.renameProcedure(this.getProcedureCall(), name);
                              ^^^^^^^^^^^^^^^^

../blocks/procedures.js:846: WARNING - [JSC_INEXISTENT_PROPERTY] Property setProcedureParameters_ never defined on Blockly.Block
    this.setProcedureParameters_(args, paramIds);
         ^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:875: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureCall never defined on Blockly.Block
      var name = this.getProcedureCall();
                      ^^^^^^^^^^^^^^^^

../blocks/procedures.js:879: WARNING - [JSC_INEXISTENT_PROPERTY] Property defType_ never defined on Blockly.Block
        (def.type != this.defType_ ||
                          ^^^^^^^^

../blocks/procedures.js:900: WARNING - [JSC_INEXISTENT_PROPERTY] Property defType_ never defined on Blockly.Block
        block.setAttribute("type", this.defType_);
                                        ^^^^^^^^

../blocks/procedures.js:906: WARNING - [JSC_INEXISTENT_PROPERTY] Property mutationToDom never defined on Blockly.Block
        var mutation = this.mutationToDom();
                            ^^^^^^^^^^^^^

../blocks/procedures.js:910: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureCall never defined on Blockly.Block
        field.appendChild(document.createTextNode(this.getProcedureCall()));
                                                       ^^^^^^^^^^^^^^^^

../blocks/procedures.js:920: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureCall never defined on Blockly.Block
      var name = this.getProcedureCall();
                      ^^^^^^^^^^^^^^^^

../blocks/procedures.js:924: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Block.prototype.dispose: called with 2 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
        this.dispose(true, false);
        ^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:928: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureCall never defined on Blockly.Block
      var name = this.getProcedureCall();
                      ^^^^^^^^^^^^^^^^

../blocks/procedures.js:964: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureCall never defined on Blockly.Block
    var name = this.getProcedureCall();
                    ^^^^^^^^^^^^^^^^

../blocks/procedures.js:1054: WARNING - [JSC_INEXISTENT_PARAM] parameter e does not appear in <anonymous>'s parameter list
  onchange: function(/* e */) {
            ^^^^^^^^^^^^^^^^^^^

../blocks/procedures.js:1062: WARNING - [JSC_INEXISTENT_PROPERTY] Property FUNCTION_TYPES never defined on Blockly.Block
      if (this.FUNCTION_TYPES.indexOf(block.type) != -1) {
               ^^^^^^^^^^^^^^

../blocks/text.js:236: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateAt_ never defined on Blockly.Block
    this.updateAt_(1, true);
         ^^^^^^^^^

../blocks/text.js:237: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateAt_ never defined on Blockly.Block
    this.updateAt_(2, true);
         ^^^^^^^^^

../blocks/text.js:261: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateAt_ never defined on Blockly.Block
    this.updateAt_(1, isAt1);
         ^^^^^^^^^

../blocks/text.js:262: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateAt_ never defined on Blockly.Block
    this.updateAt_(2, isAt2);
         ^^^^^^^^^

../blocks/text.js:400: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateType_ never defined on Blockly.Block
      thisBlock.updateType_(newOp);
                ^^^^^^^^^^^

../blocks/text.js:427: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Element.prototype.setAttribute does not match formal parameter
found   : (null|string)
required: (TrustedHTML|TrustedScriptURL|TrustedURL|boolean|number|string)
    container.setAttribute('type', this.getFieldValue('TYPE'));
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/text.js:436: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateType_ never defined on Blockly.Block
    this.updateType_(xmlElement.getAttribute('type'));
         ^^^^^^^^^^^

../blocks/text.js:458: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateType_ never defined on Blockly.Block
      thisBlock.updateType_(newOp);
                ^^^^^^^^^^^

../blocks/text.js:462: WARNING - [JSC_INEXISTENT_PROPERTY] Property newQuote_ never defined on Blockly.Block
        .appendField(this.newQuote_(true))
                          ^^^^^^^^^

../blocks/text.js:464: WARNING - [JSC_INEXISTENT_PROPERTY] Property newQuote_ never defined on Blockly.Block
        .appendField(this.newQuote_(false));
                          ^^^^^^^^^

../blocks/text.js:611: WARNING - [JSC_INEXISTENT_PROPERTY] Property newQuote_ never defined on Blockly.Block
          input.insertFieldAt(j, this.newQuote_(true));
                                      ^^^^^^^^^

../blocks/text.js:612: WARNING - [JSC_INEXISTENT_PROPERTY] Property newQuote_ never defined on Blockly.Block
          input.insertFieldAt(j + 2, this.newQuote_(false));
                                          ^^^^^^^^^

../blocks/text.js:631: WARNING - [JSC_INEXISTENT_PROPERTY] Property QUOTE_IMAGE_LEFT_DATAURI never defined on Blockly.Block
      this.QUOTE_IMAGE_LEFT_DATAURI :
           ^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/text.js:632: WARNING - [JSC_INEXISTENT_PROPERTY] Property QUOTE_IMAGE_RIGHT_DATAURI never defined on Blockly.Block
      this.QUOTE_IMAGE_RIGHT_DATAURI;
           ^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/text.js:635: WARNING - [JSC_INEXISTENT_PROPERTY] Property QUOTE_IMAGE_WIDTH never defined on Blockly.Block
        this.QUOTE_IMAGE_WIDTH,
             ^^^^^^^^^^^^^^^^^

../blocks/text.js:636: WARNING - [JSC_INEXISTENT_PROPERTY] Property QUOTE_IMAGE_HEIGHT never defined on Blockly.Block
        this.QUOTE_IMAGE_HEIGHT,
             ^^^^^^^^^^^^^^^^^^

../blocks/text.js:647: WARNING - [JSC_INEXISTENT_PROPERTY] Property quoteField_ never defined on Blockly.Block
  this.quoteField_('TEXT');
       ^^^^^^^^^^^

../blocks/text.js:674: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateShape_ never defined on Blockly.Block
    this.updateShape_();
         ^^^^^^^^^^^^

../blocks/text.js:689: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.prototype.connect does not match formal parameter
found   : (Blockly.Connection|null)
required: Blockly.Connection
      connection.connect(itemBlock.previousConnection);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../blocks/text.js:716: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateShape_ never defined on Blockly.Block
    this.updateShape_();
         ^^^^^^^^^^^^

../blocks/text.js:748: WARNING - [JSC_INEXISTENT_PROPERTY] Property newQuote_ never defined on Blockly.Block
          .appendField(this.newQuote_(true))
                            ^^^^^^^^^

../blocks/text.js:749: WARNING - [JSC_INEXISTENT_PROPERTY] Property newQuote_ never defined on Blockly.Block
          .appendField(this.newQuote_(false));
                            ^^^^^^^^^

../blocks/text.js:777: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateShape_ never defined on Blockly.Block
  this.updateShape_();
       ^^^^^^^^^^^^

../blocks/text.js:826: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateAt_ never defined on Blockly.Block
    this.updateAt_(isAt);
         ^^^^^^^^^

../blocks/text.js:873: WARNING - [JSC_INEXISTENT_PROPERTY] Property updateAt_ never defined on Blockly.Block
  this.updateAt_(true);
       ^^^^^^^^^

../core/block.js:67: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property blockDB_ of Blockly.Workspace not allowed here.
  workspace.blockDB_[this.id] = this;
  ^^^^^^^^^^^^^^^^^^

../core/block.js:292: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property blockDB_ of Blockly.Workspace not allowed here.
      delete this.workspace.blockDB_[this.id];
             ^^^^^^^^^^^^^^^^^^^^^^^

../core/block.js:293: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace of Blockly.Block
found   : null
required: Blockly.Workspace
      this.workspace = null;
      ^^^^^^^^^^^^^^^^^^^^^

../core/block.js:392: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property checkType_ of Blockly.Connection not allowed here.
  if (childConnection.checkType_(parentConnection)) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block.js:445: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property checkType_ of Blockly.Connection not allowed here.
    if (previousTarget && previousTarget.checkType_(nextTarget)) {
                          ^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block.js:1277: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property text_ of Blockly.Field not allowed here.
    text.push(this.getInput('_TEMP_COLLAPSED_INPUT').fieldRow[0].text_);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block.js:1703: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Block.prototype.dispose: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
          block.dispose();
          ^^^^^^^^^^^^^^^

../core/block.js:1750: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Blockly.Comment|string)
required: string
  return this.comment || '';
         ^^^^^^^^^^^^^^^^^^

../core/block_animations.js:173: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.BlockAnimations.disconnectUiStep_ does not match formal parameter
found   : (Element|null)
required: Element
      block.getSvgRoot(), magnitude, new Date);
      ^^^^^^^^^^^^^^^^^^

../core/block_drag_surface.js:178: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.getRelativeXY does not match formal parameter
found   : (Element|null)
required: Element
  var xy = Blockly.utils.getRelativeXY(this.SVG_);
                                       ^^^^^^^^^

../core/block_drag_surface.js:198: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Node|null)
required: (Element|undefined)
  return this.dragGroup_.firstChild;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_drag_surface.js:213: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Node.prototype.appendChild does not match formal parameter
found   : (Element|undefined)
required: (Node|null)
    opt_newSurface.appendChild(this.getCurrentBlock());
                               ^^^^^^^^^^^^^^^^^^^^^^

../core/block_drag_surface.js:215: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Node.prototype.removeChild does not match formal parameter
found   : (Element|undefined)
required: (Node|null)
    this.dragGroup_.removeChild(this.getCurrentBlock());
                                ^^^^^^^^^^^^^^^^^^^^^^

../core/block_dragger.js:105: WARNING - [JSC_TYPE_MISMATCH] assignment to property draggingBlock_ of Blockly.BlockDragger
found   : null
required: Blockly.BlockSvg
  this.draggingBlock_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_dragger.js:106: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace_ of Blockly.BlockDragger
found   : null
required: Blockly.WorkspaceSvg
  this.workspace_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^

../core/block_dragger.js:112: WARNING - [JSC_TYPE_MISMATCH] assignment to property draggedConnectionManager_ of Blockly.BlockDragger
found   : null
required: Blockly.InsertionMarkerManager
    this.draggedConnectionManager_ = null;
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_dragger.js:185: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property moveToDragSurface_ of Blockly.BlockSvg not allowed here.
  this.draggingBlock_.moveToDragSurface_();
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_dragger.js:234: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property moveOffDragSurface_ of Blockly.BlockSvg not allowed here.
  this.draggingBlock_.moveOffDragSurface_(newLoc);
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_dragger.js:239: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property moveConnections_ of Blockly.BlockSvg not allowed here.
    this.draggingBlock_.moveConnections_(delta.x, delta.y);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_dragger.js:306: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property setOpen_ of Blockly.Trashcan not allowed here.
      trashcan.setOpen_(true);
      ^^^^^^^^^^^^^^^^^

../core/block_dragger.js:311: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property setOpen_ of Blockly.Trashcan not allowed here.
      trashcan.setOpen_(false);
      ^^^^^^^^^^^^^^^^^

../core/block_events.js:176: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Field.prototype.callValidator does not match formal parameter
found   : *
required: string
        field.callValidator(value);
                            ^^^^^

../core/block_events.js:177: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Field.prototype.setValue does not match formal parameter
found   : *
required: string
        field.setValue(value);
                       ^^^^^

../core/block_events.js:183: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Block.prototype.setCommentText does not match formal parameter
found   : *
required: (null|string)
      block.setCommentText(value || null);
                           ^^^^^^^^^^^^^

../core/block_events.js:186: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Block.prototype.setCollapsed does not match formal parameter
found   : *
required: boolean
      block.setCollapsed(value);
                         ^^^^^

../core/block_events.js:189: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Block.prototype.setDisabled does not match formal parameter
found   : *
required: boolean
      block.setDisabled(value);
                        ^^^^^

../core/block_events.js:192: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Block.prototype.setInputsInline does not match formal parameter
found   : *
required: boolean
      block.setInputsInline(value);
                            ^^^^^

../core/block_events.js:230: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property getDescendantIds_ of Blockly.Events not allowed here.
  this.ids = Blockly.Events.getDescendantIds_(block);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_events.js:278: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Xml.domToWorkspace does not match formal parameter
found   : (Blockly.Workspace|null)
required: Blockly.Workspace
    Blockly.Xml.domToWorkspace(xml, workspace);
                                    ^^^^^^^^^

../core/block_events.js:283: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Block.prototype.dispose: called with 2 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
        block.dispose(false, false);
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_events.js:312: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property getDescendantIds_ of Blockly.Events not allowed here.
  this.ids = Blockly.Events.getDescendantIds_(block);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_events.js:359: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Block.prototype.dispose: called with 2 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
        block.dispose(false, false);
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_events.js:368: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Xml.domToWorkspace does not match formal parameter
found   : (Blockly.Workspace|null)
required: Blockly.Workspace
    Blockly.Xml.domToWorkspace(xml, workspace);
                                    ^^^^^^^^^

../core/block_events.js:455: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Workspace.getById does not match formal parameter
found   : (string|undefined)
required: string
  var workspace = Blockly.Workspace.getById(this.workspaceId);
                                            ^^^^^^^^^^^^^^^^

../core/block_render_svg.js:97: WARNING - [JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE] constant property TAB_WIDTH assigned a value more than once
Blockly.BlockSvg.TAB_WIDTH = 8;
^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_render_svg.js:618: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgPath_ of Blockly.BlockSvg not allowed here.
  this.svgPath_.setAttribute('d', pathString);
  ^^^^^^^^^^^^^

../core/block_render_svg.js:619: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgPathDark_ of Blockly.BlockSvg not allowed here.
  this.svgPathDark_.setAttribute('d', pathString);
  ^^^^^^^^^^^^^^^^^

../core/block_render_svg.js:623: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgPathLight_ of Blockly.BlockSvg not allowed here.
  this.svgPathLight_.setAttribute('d', pathString);
  ^^^^^^^^^^^^^^^^^^

../core/block_render_svg.js:626: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgPath_ of Blockly.BlockSvg not allowed here.
    this.svgPath_.setAttribute('transform', 'scale(-1 1)');
    ^^^^^^^^^^^^^

../core/block_render_svg.js:627: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgPathLight_ of Blockly.BlockSvg not allowed here.
    this.svgPathLight_.setAttribute('transform', 'scale(-1 1)');
    ^^^^^^^^^^^^^^^^^^

../core/block_render_svg.js:628: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgPathDark_ of Blockly.BlockSvg not allowed here.
    this.svgPathDark_.setAttribute('transform', 'translate(1,1) scale(-1 1)');
    ^^^^^^^^^^^^^^^^^

../core/block_render_svg.js:1183: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property x_ of Blockly.Connection not allowed here.
    var dx = existingConnection.x_ - newConnection.x_;
             ^^^^^^^^^^^^^^^^^^^^^

../core/block_render_svg.js:1183: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property x_ of Blockly.Connection not allowed here.
    var dx = existingConnection.x_ - newConnection.x_;
                                     ^^^^^^^^^^^^^^^^

../core/block_render_svg.js:1184: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
    var dy = existingConnection.y_ - newConnection.y_;
             ^^^^^^^^^^^^^^^^^^^^^

../core/block_render_svg.js:1184: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
    var dy = existingConnection.y_ - newConnection.y_;
                                     ^^^^^^^^^^^^^^^^

../core/block_render_svg.js:1197: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgGroup_ of Blockly.BlockSvg not allowed here.
    Blockly.utils.addClass(/** @type {!Element} */ (this.svgGroup_),
                                                    ^^^^^^^^^^^^^^

../core/block_render_svg.js:1200: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgGroup_ of Blockly.BlockSvg not allowed here.
    Blockly.utils.removeClass(/** @type {!Element} */ (this.svgGroup_),
                                                       ^^^^^^^^^^^^^^

../core/block_svg.js:54: WARNING - [JSC_OPTIONAL_ARG_AT_END] optional arguments must be at the end
Blockly.BlockSvg = function(workspace, prototypeName, opt_id, opt_parent) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:174: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.bindEventWithChecks_ does not match formal parameter
found   : (Element|null)
required: EventTarget
    Blockly.bindEventWithChecks_(this.getSvgRoot(), "mousedown", this, this.onMouseDown_);
                                 ^^^^^^^^^^^^^^^^^

../core/block_svg.js:267: WARNING - [JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH] mismatch of the setParent property type and the type of the property it overrides from superclass Blockly.Block
original: function(this:Blockly.Block, (Blockly.Block|null)): undefined
override: function(this:Blockly.BlockSvg, (Blockly.BlockSvg|null)): undefined
Blockly.BlockSvg.prototype.setParent = function(newParent) {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:318: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.getRelativeXY does not match formal parameter
found   : Node
required: Element
      var xy = Blockly.utils.getRelativeXY(element);
                                           ^^^^^^^

../core/block_svg.js:428: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.removeAttribute does not match formal parameter
found   : (Element|null)
required: Element
  Blockly.utils.removeAttribute(this.getSvgRoot(), "transform");
                                ^^^^^^^^^^^^^^^^^

../core/block_svg.js:471: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.BlockSvg.prototype.getRelativeToSurfaceXY: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
  var blockXY = this.getRelativeToSurfaceXY(this);
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:570: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Array.prototype.indexOf does not match formal parameter
found   : (Blockly.Block|Blockly.Field|null)
required: (Blockly.FieldTextInput|Blockly.Input)
  var i = list.indexOf(start);
                       ^^^^^

../core/block_svg.js:583: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property showEditor_ of Blockly.FieldTextInput not allowed here.
    target.showEditor_();
    ^^^^^^^^^^^^^^^^^^

../core/block_svg.js:585: WARNING - [JSC_INEXISTENT_PROPERTY] Property tab never defined on Blockly.Input
    target.tab(null, forward);
           ^^^

../core/block_svg.js:771: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property draggingConnections_ of Blockly not allowed here.
    Blockly.draggingConnections_ = Blockly.draggingConnections_.concat(this.getConnections_(true));
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:771: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property draggingConnections_ of Blockly not allowed here.
    Blockly.draggingConnections_ = Blockly.draggingConnections_.concat(this.getConnections_(true));
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:774: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property draggingConnections_ of Blockly not allowed here.
    Blockly.draggingConnections_ = [];
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:856: WARNING - [JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH] mismatch of the dispose property type and the type of the property it overrides from superclass Blockly.Block
original: function(this:Blockly.Block, boolean): undefined
override: function(this:Blockly.BlockSvg, boolean, boolean): undefined
Blockly.BlockSvg.prototype.dispose = function(healStack, animate) {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:938: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.BlockSvg.prototype.setShadowColour_ does not match formal parameter
found   : Array<number>
required: string
    hexColour = this.setShadowColour_(rgb, colourSecondary);
                                      ^^^

../core/block_svg.js:940: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.BlockSvg.prototype.setBorderColour_ does not match formal parameter
found   : Array<number>
required: string
    this.setBorderColour_(rgb, colourTertiary);
                          ^^^

../core/block_svg.js:971: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of goog.color.lighten does not match formal parameter
found   : string
required: (Array<number>|null)
    var hexLight = goog.color.rgbArrayToHex(goog.color.lighten(rgb, 0.3));
                                                               ^^^

../core/block_svg.js:972: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of goog.color.darken does not match formal parameter
found   : string
required: (Array<number>|null)
    var hexDark = goog.color.rgbArrayToHex(goog.color.darken(rgb, 0.2));
                                                             ^^^

../core/block_svg.js:993: WARNING - [JSC_TYPE_MISMATCH] assignment
found   : Array<number>
required: string
    rgb = goog.color.lighten(rgb, 0.6);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:993: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of goog.color.lighten does not match formal parameter
found   : string
required: (Array<number>|null)
    rgb = goog.color.lighten(rgb, 0.6);
                             ^^^

../core/block_svg.js:1190: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.removeAttribute does not match formal parameter
found   : (SVGElement|null)
required: Element
    Blockly.utils.removeAttribute(this.svgPath_, "filter");
                                  ^^^^^^^^^^^^^

../core/block_svg.js:1373: WARNING - [JSC_PRIVATE_OVERRIDE] Overriding private property of Blockly.Block.prototype.
Blockly.BlockSvg.prototype.getConnections_ = function(all) {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:1402: WARNING - [JSC_PRIVATE_OVERRIDE] Overriding private property of Blockly.Block.prototype.
Blockly.BlockSvg.prototype.makeConnection_ = function(type) {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:1430: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property neighbours_ of Blockly.Connection not allowed here.
    var neighbours = connection.neighbours_(Blockly.SNAP_RADIUS);
                     ^^^^^^^^^^^^^^^^^^^^^^

../core/block_svg.js:1430: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Connection.prototype.neighbours_: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
    var neighbours = connection.neighbours_(Blockly.SNAP_RADIUS);
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/blockly.js:112: WARNING - [JSC_TYPE_MISMATCH] assignment to property cache3dSupported_ of Blockly
found   : null
required: boolean
Blockly.cache3dSupported_ = null;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/blockly.js:246: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: workspace
        var workspace = Blockly.clipboardSource_;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/blockly.js:270: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Block.prototype.dispose: called with 2 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    Blockly.selected.dispose(/* heal */ true, true);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/blockly.js:285: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Xml.blockToDom does not match formal parameter
found   : (Blockly.Block|Blockly.WorkspaceComment)
required: Blockly.Block
    var xml = Blockly.Xml.blockToDom(toCopy);
                                     ^^^^^^

../core/blockly.js:294: WARNING - [JSC_TYPE_MISMATCH] assignment to property clipboardSource_ of Blockly
found   : Blockly.Workspace
required: (Blockly.WorkspaceSvg|null)
  Blockly.clipboardSource_ = toCopy.workspace;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/blockly.js:297: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.getBlockTypeCounts does not match formal parameter
found   : (Blockly.Block|Blockly.WorkspaceComment)
required: Blockly.Block
    : Blockly.utils.getBlockTypeCounts(toCopy, true);
                                       ^^^^^^

../core/blockly.js:365: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : Function
required: Array<Array>
  return Blockly.getMainWorkspace().addChangeListener(func);
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/blockly.js:375: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Blockly.Workspace|null)
required: Blockly.Workspace
  return Blockly.mainWorkspace;
         ^^^^^^^^^^^^^^^^^^^^^

../core/blockly.js:415: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    var blocks = this.mainWorkspace.getAllBlocks(true);
                 ^^^^

../core/blockly.js:419: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Names.equals does not match formal parameter
found   : (null|string)
required: string
        if (Blockly.Names.equals(procName, varName)) {
                                           ^^^^^^^

../core/blockly.js:430: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of callback does not match formal parameter
found   : {className: (??|undefined), varName: (null|string)}
required: string
  callback({ varName: varName, className: className });
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/blockly.js:680: WARNING - [JSC_UNSAFE_NAMESPACE] incomplete alias created for namespace Blockly, possibly due to await/yield transpilation.
See https://github.com/google/closure-compiler/wiki/FAQ#i-got-an-incomplete-alias-created-for-namespace-error--what-do-i-do for more details.
  var value = Blockly;
              ^^^^^^^

../core/blockly.js:704: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
  this.theme_ = theme;
  ^^^^

../core/blockly.js:708: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.refreshTheme_(ws);
    ^^^^

../core/blockly.js:719: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
  this.updateBlockStyles_(
  ^^^^

../core/blockly.js:720: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.getAllBlocks: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    ws.getAllBlocks().filter(function(block) {
    ^^^^^^^^^^^^^^^^^

../core/blockly.js:727: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    this.updateBlockStyles_(ws.flyout_.workspace_.getAllBlocks());
    ^^^^

../core/blockly.js:737: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Events.Ui: called with 2 argument(s). Function requires at least 4 argument(s) and no more than 4 argument(s).
  var event = new Blockly.Events.Ui(null, "theme");
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/blockly.js:752: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Block.prototype.setStyle does not match formal parameter
found   : (null|string)
required: string
    block.setStyle(blockStyleName);
                   ^^^^^^^^^^^^^^

../core/blockly.js:764: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
  return this.theme_;
         ^^^^

../core/bubble_dragger.js:101: WARNING - [JSC_TYPE_MISMATCH] assignment to property draggingBubble_ of Blockly.BubbleDragger
found   : null
required: (Blockly.Bubble|Blockly.WorkspaceCommentSvg)
  this.draggingBubble_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/bubble_dragger.js:102: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace_ of Blockly.BubbleDragger
found   : null
required: Blockly.WorkspaceSvg
  this.workspace_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^

../core/bubble_dragger.js:166: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function this.draggingBubble_.dispose: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
    this.draggingBubble_.dispose(false, true);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/bubble_dragger.js:185: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property setOpen_ of Blockly.Trashcan not allowed here.
      trashcan.setOpen_(true);
      ^^^^^^^^^^^^^^^^^

../core/bubble_dragger.js:190: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property setOpen_ of Blockly.Trashcan not allowed here.
      trashcan.setOpen_(false);
      ^^^^^^^^^^^^^^^^^

../core/bubble_dragger.js:225: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property toolbox_ of Blockly.WorkspaceSvg not allowed here.
  if (this.workspace_.toolbox_) {
      ^^^^^^^^^^^^^^^^^^^^^^^^

../core/bubble_dragger.js:228: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property toolbox_ of Blockly.WorkspaceSvg not allowed here.
    this.workspace_.toolbox_.removeStyle(style);
    ^^^^^^^^^^^^^^^^^^^^^^^^

../core/bubble_dragger.js:239: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Events.CommentMove does not match formal parameter
found   : (Blockly.Bubble|Blockly.WorkspaceCommentSvg)
required: (Blockly.WorkspaceComment|null)
    var event = new Blockly.Events.CommentMove(this.draggingBubble_);
                                               ^^^^^^^^^^^^^^^^^^^^

../core/bubble_dragger.js:281: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.BlockDragSurfaceSvg.prototype.setBlocksAndShow does not match formal parameter
found   : (Element|null)
required: Element
  this.dragSurface_.setBlocksAndShow(this.draggingBubble_.getSvgRoot());
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/class.js:80: WARNING - [JSC_UNRECOGNIZED_TYPE_ERROR] Bad type annotation. Unknown type BLOCKLY.Workspace
 *   @param {BLOCKLY.Workspace} workspace  workspace to search for usedClasses
             ^

../core/class.js:82: WARNING - [JSC_UNRECOGNIZED_TYPE_ERROR] Bad type annotation. Unknown type array
 *   @return {array} 2-dim array
              ^

../core/class.js:150: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Class.isLegalName_: called with 4 argument(s). Function requires at least 2 argument(s) and no more than 3 argument(s).
  while (!Blockly.Class.isLegalName_(name, block.workspace, block, type)) {
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/class.js:172: WARNING - [JSC_OPTIONAL_ARG_AT_END] optional arguments must be at the end
Blockly.Class.isLegalName_ = function(name, workspace, opt_exclude, type) {
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/class.js:173: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Class.isNameUsed: called with 4 argument(s). Function requires at least 2 argument(s) and no more than 3 argument(s).
  return !Blockly.Class.isNameUsed(name, workspace, opt_exclude, type);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/class.js:183: WARNING - [JSC_OPTIONAL_ARG_AT_END] optional arguments must be at the end
Blockly.Class.isNameUsed = function(name, workspace, opt_exclude, type) {
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/class.js:192: WARNING - [JSC_INEXISTENT_PROPERTY] Property getClassDef never defined on Blockly.Block
        var procName = blocks[i].getClassDef();
                                 ^^^^^^^^^^^

../core/class.js:200: WARNING - [JSC_INEXISTENT_PROPERTY] Property getMethodDef never defined on Blockly.Block
        var procName = blocks[i].getMethodDef()[0];
                                 ^^^^^^^^^^^^

../core/class.js:218: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
  var legalName = Blockly.Class.findLegalName(name, this.sourceBlock_, "class");
                                                    ^^^^

../core/class.js:219: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
  var oldName = this.text_;
                ^^^^

../core/class.js:221: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    var blocks = this.sourceBlock_.workspace.getAllBlocks(false);
                 ^^^^

../core/class.js:231: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
  Blockly.Variables.renameScope(this.sourceBlock_.workspace, oldName, legalName);
                                ^^^^

../core/class.js:236: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
  var oldName = this.text_;
                ^^^^

../core/class.js:238: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
  var legalName = Blockly.Class.findLegalName(name, this.sourceBlock_, "method");
                                                    ^^^^

../core/class.js:240: WARNING - [JSC_USED_GLOBAL_THIS] dangerous use of the global this object
    var blocks = this.sourceBlock_.workspace.getAllBlocks(false);
                 ^^^^

../core/comment.js:192: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Warning.prototype.setVisible.call does not match formal parameter
found   : Blockly.Comment
required: (Blockly.Warning|null|undefined)
    Blockly.Warning.prototype.setVisible.call(this, visible);
                                              ^^^^

../core/comment.js:203: WARNING - [JSC_TYPE_MISMATCH] actual parameter 4 of Blockly.Bubble does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
        this.iconXY_, this.width_, this.height_);
        ^^^^^^^^^^^^

../core/comment.js:229: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property promote_ of Blockly.Bubble not allowed here.
  if (this.bubble_.promote_()) {
      ^^^^^^^^^^^^^^^^^^^^^

../core/connection.js:128: WARNING - [JSC_TYPE_MISMATCH] assignment to property hidden_ of Blockly.Connection.prototype
found   : null
required: boolean
Blockly.Connection.prototype.hidden_ = null;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection.js:155: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Block.prototype.dispose: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
      orphanBlock.dispose();
      ^^^^^^^^^^^^^^^^^^^^^

../core/connection.js:167: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.lastConnectionInRow_ does not match formal parameter
found   : (Blockly.Block|null)
required: Blockly.Block
          childBlock, orphanBlock);
          ^^^^^^^^^^

../core/connection.js:242: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property removeConnection_ of Blockly.ConnectionDB not allowed here.
    this.db_.removeConnection_(this);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection.js:354: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property draggingConnections_ of Blockly not allowed here.
  if (Blockly.draggingConnections_.indexOf(candidate) != -1) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection.js:431: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property draggingConnections_ of Blockly not allowed here.
  if (Blockly.draggingConnections_.indexOf(candidate) != -1) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection.js:493: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Blockly.Connection|boolean)
required: (Blockly.Connection|null)
  return connection;
         ^^^^^^^^^^

../core/connection.js:545: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.prototype.disconnectInternal_ does not match formal parameter
found   : (Blockly.Block|null)
required: Blockly.Block
  this.disconnectInternal_(parentBlock, childBlock);
                           ^^^^^^^^^^^

../core/connection.js:545: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Connection.prototype.disconnectInternal_ does not match formal parameter
found   : (Blockly.Block|null)
required: Blockly.Block
  this.disconnectInternal_(parentBlock, childBlock);
                                        ^^^^^^^^^^

../core/connection.js:630: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.prototype.checkType_ does not match formal parameter
found   : (Blockly.Connection|null)
required: Blockly.Connection
  if (this.isConnected() && !this.checkType_(this.targetConnection)) {
                                             ^^^^^^^^^^^^^^^^^^^^^

../core/connection.js:695: WARNING - [JSC_INEXISTENT_PARAM] parameter maxLimit does not appear in Blockly.Connection.prototype.neighbours_'s parameter list
Blockly.Connection.prototype.neighbours_ = function(/* maxLimit */) {
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection_db.js:52: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property inDB_ of Blockly.Connection not allowed here.
  if (connection.inDB_) {
      ^^^^^^^^^^^^^^^^

../core/connection_db.js:61: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property inDB_ of Blockly.Connection not allowed here.
  connection.inDB_ = true;
  ^^^^^^^^^^^^^^^^

../core/connection_db.js:83: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
  var yPos = conn.y_;
             ^^^^^^^

../core/connection_db.js:87: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
  while (pointerMin >= 0 && this.connections_[pointerMin].y_ == yPos) {
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection_db.js:95: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
         this.connections_[pointerMax].y_ == yPos) {
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection_db.js:121: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
    if (this.connections_[pointerMid].y_ < connection.y_) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection_db.js:121: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
    if (this.connections_[pointerMid].y_ < connection.y_) {
                                           ^^^^^^^^^^^^^

../core/connection_db.js:123: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
    } else if (this.connections_[pointerMid].y_ > connection.y_) {
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection_db.js:123: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
    } else if (this.connections_[pointerMid].y_ > connection.y_) {
                                                  ^^^^^^^^^^^^^

../core/connection_db.js:139: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property inDB_ of Blockly.Connection not allowed here.
  if (!connection.inDB_) {
       ^^^^^^^^^^^^^^^^

../core/connection_db.js:146: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property inDB_ of Blockly.Connection not allowed here.
  connection.inDB_ = false;
  ^^^^^^^^^^^^^^^^

../core/connection_db.js:160: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property x_ of Blockly.Connection not allowed here.
  var currentX = connection.x_;
                 ^^^^^^^^^^^^^

../core/connection_db.js:161: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
  var currentY = connection.y_;
                 ^^^^^^^^^^^^^

../core/connection_db.js:168: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
    if (db[pointerMid].y_ < currentY) {
        ^^^^^^^^^^^^^^^^^

../core/connection_db.js:186: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property x_ of Blockly.Connection not allowed here.
    var dx = currentX - db[yIndex].x_;
                        ^^^^^^^^^^^^^

../core/connection_db.js:187: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
    var dy = currentY - db[yIndex].y_;
                        ^^^^^^^^^^^^^

../core/connection_db.js:221: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
  return (Math.abs(this.connections_[index].y_ - baseY) <= maxRadius);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection_db.js:243: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
  var baseY = conn.y_;
              ^^^^^^^

../core/connection_db.js:244: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property x_ of Blockly.Connection not allowed here.
  var baseX = conn.x_;
              ^^^^^^^

../core/connection_db.js:246: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property x_ of Blockly.Connection not allowed here.
  conn.x_ = baseX + dxy.x;
  ^^^^^^^

../core/connection_db.js:247: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
  conn.y_ = baseY + dxy.y;
  ^^^^^^^

../core/connection_db.js:260: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
  while (pointerMin >= 0 && this.isInYRange_(pointerMin, conn.y_, maxRadius)) {
                                                         ^^^^^^^

../core/connection_db.js:262: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Connection.prototype.isConnectionAllowed: called with 2 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    if (conn.isConnectionAllowed(temp, bestRadius)) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection_db.js:271: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
      this.isInYRange_(pointerMax, conn.y_, maxRadius)) {
                                   ^^^^^^^

../core/connection_db.js:273: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Connection.prototype.isConnectionAllowed: called with 2 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    if (conn.isConnectionAllowed(temp, bestRadius)) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/connection_db.js:281: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property x_ of Blockly.Connection not allowed here.
  conn.x_ = baseX;
  ^^^^^^^

../core/connection_db.js:282: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.Connection not allowed here.
  conn.y_ = baseY;
  ^^^^^^^

../core/contextmenu.js:157: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.addClass does not match formal parameter
found   : (Element|null)
required: Element
  Blockly.utils.addClass(menuDom, 'blocklyContextMenu');
                         ^^^^^^^

../core/contextmenu.js:160: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.bindEventWithChecks_ does not match formal parameter
found   : (Element|null)
required: EventTarget
      menuDom, 'contextmenu', null, Blockly.utils.noEvent);
      ^^^^^^^

../core/contextmenu.js:250: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property showHelp_ of Blockly.BlockSvg not allowed here.
      block.showHelp_();
      ^^^^^^^^^^^^^^^

../core/contextmenu.js:268: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property duplicate_ of Blockly not allowed here.
      Blockly.duplicate_(block);
      ^^^^^^^^^^^^^^^^^^

../core/contextmenu.js:310: WARNING - [JSC_INEXISTENT_PROPERTY] Property REMOVE_COMMENT never defined on Blockly.Msg
    text: Blockly.Msg.REMOVE_COMMENT,
                      ^^^^^^^^^^^^^^

../core/contextmenu.js:314: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.WorkspaceCommentSvg.prototype.dispose: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      comment.dispose(true, true);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/contextmenu.js:330: WARNING - [JSC_INEXISTENT_PROPERTY] Property DUPLICATE_COMMENT never defined on Blockly.Msg
    text: Blockly.Msg.DUPLICATE_COMMENT,
                      ^^^^^^^^^^^^^^^^^

../core/contextmenu.js:333: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property duplicate_ of Blockly not allowed here.
      Blockly.duplicate_(comment);
      ^^^^^^^^^^^^^^^^^^

../core/contextmenu.js:352: WARNING - [JSC_INEXISTENT_PROPERTY] Property WORKSPACE_COMMENT_DEFAULT_TEXT never defined on Blockly.Msg
        ws, Blockly.Msg.WORKSPACE_COMMENT_DEFAULT_TEXT,
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/contextmenu.js:383: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.WorkspaceCommentSvg.prototype.render: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      comment.render(false);
      ^^^^^^^^^^^^^^^^^^^^^

../core/contextmenu.js:393: WARNING - [JSC_INEXISTENT_PROPERTY] Property ADD_COMMENT never defined on Blockly.Msg
  wsCommentOption.text = Blockly.Msg.ADD_COMMENT;
                                     ^^^^^^^^^^^

../core/dropdowndiv.js:70: WARNING - [JSC_TYPE_MISMATCH] assignment to property positionToField_ of Blockly.DropDownDiv
found   : null
required: boolean
Blockly.DropDownDiv.positionToField_ = null;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/dropdowndiv.js:112: WARNING - [JSC_TYPE_MISMATCH] assignment to property animateOutTimer_ of Blockly.DropDownDiv
found   : null
required: number
Blockly.DropDownDiv.animateOutTimer_ = null;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/dropdowndiv.js:118: WARNING - [JSC_TYPE_MISMATCH] assignment to property onHide_ of Blockly.DropDownDiv
found   : number
required: (Function|null)
Blockly.DropDownDiv.onHide_ = 0;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/dropdowndiv.js:204: WARNING - [JSC_OPTIONAL_ARG_AT_END] optional arguments must be at the end
Blockly.DropDownDiv.showPositionedByBlock = function(field, block,
                                            ^^^^^^^^^^^^^^^^^^^^^^

../core/dropdowndiv.js:238: WARNING - [JSC_OPTIONAL_ARG_AT_END] optional arguments must be at the end
Blockly.DropDownDiv.showPositionedByField = function(owner,
                                            ^^^^^^^^^^^^^^^

../core/dropdowndiv.js:277: WARNING - [JSC_TYPE_MISMATCH] assignment to property onHide_ of Blockly.DropDownDiv
found   : (Function|null|undefined)
required: (Function|null)
  Blockly.DropDownDiv.onHide_ = opt_onHide;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/dropdowndiv.js:460: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.DropDownDiv.positionInternal_: called with 0 argument(s). Function requires at least 4 argument(s) and no more than 4 argument(s).
  Blockly.DropDownDiv.positionInternal_();
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/events.js:201: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Workspace.getById does not match formal parameter
found   : (string|undefined)
required: string
    var workspace = Blockly.Workspace.getById(event.workspaceId);
                                              ^^^^^^^^^^^^^^^^^

../core/events.js:379: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Events.Ui: called with 1 argument(s). Function requires at least 4 argument(s) and no more than 4 argument(s).
      event = new Blockly.Events.Ui(null);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/events.js:385: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Events.CommentChange: called with 1 argument(s). Function requires at least 3 argument(s) and no more than 3 argument(s).
      event = new Blockly.Events.CommentChange(null);
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/events.js:411: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Workspace.getById does not match formal parameter
found   : (string|undefined)
required: string
    var workspace = Blockly.Workspace.getById(event.workspaceId);
                                              ^^^^^^^^^^^^^^^^^

../core/events_abstract.js:49: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property group_ of Blockly.Events not allowed here.
  this.group = Blockly.Events.group_;
               ^^^^^^^^^^^^^^^^^^^^^

../core/events_abstract.js:103: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Workspace.getById does not match formal parameter
found   : (string|undefined)
required: string
  var workspace = Blockly.Workspace.getById(this.workspaceId);
                                            ^^^^^^^^^^^^^^^^

../core/extensions.js:117: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Mutator does not match formal parameter
found   : (Array<string>|null|undefined)
required: Array<string>
      this.setMutator(new Blockly.Mutator(opt_blockList));
                                          ^^^^^^^^^^^^^

../core/extensions.js:155: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Extensions.mutatorPropertiesMatch_ does not match formal parameter
found   : (Array<(Object|null)>|undefined)
required: Array<(Object|null)>
    if (!Blockly.Extensions.mutatorPropertiesMatch_(mutatorProperties, block)) {
                                                    ^^^^^^^^^^^^^^^^^

../core/extensions.js:264: WARNING - [JSC_INEXISTENT_PROPERTY] Property domToMutation never defined on Blockly.Block
    result.push(block.domToMutation);
                      ^^^^^^^^^^^^^

../core/extensions.js:267: WARNING - [JSC_INEXISTENT_PROPERTY] Property mutationToDom never defined on Blockly.Block
    result.push(block.mutationToDom);
                      ^^^^^^^^^^^^^

../core/extensions.js:270: WARNING - [JSC_INEXISTENT_PROPERTY] Property compose never defined on Blockly.Block
    result.push(block.compose);
                      ^^^^^^^

../core/extensions.js:273: WARNING - [JSC_INEXISTENT_PROPERTY] Property decompose never defined on Blockly.Block
    result.push(block.decompose);
                      ^^^^^^^^^

../core/extensions.js:350: WARNING - [JSC_TYPE_MISMATCH] restricted index type
found   : (null|string)
required: string
      var tooltip = lookupTable[value];
                                ^^^^^

../core/field.js:50: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Field.prototype.setValidator does not match formal parameter
found   : (function(string): (null|string|undefined)|undefined)
required: (function(string): (null|string|undefined)|null)
  this.setValidator(opt_validator);
                    ^^^^^^^^^^^^^

../core/field.js:159: WARNING - [JSC_TYPE_MISMATCH] assignment to property clickTarget_ of Blockly.Field.prototype
found   : null
required: Element
Blockly.Field.prototype.clickTarget_ = null;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field.js:238: WARNING - [JSC_TYPE_MISMATCH] assignment to property textElement_ of Blockly.Field
found   : null
required: Element
  this.textElement_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^

../core/field.js:554: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property bumpNeighbours_ of Blockly.Block not allowed here.
    this.sourceBlock_.bumpNeighbours_();
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field.js:583: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Events.BlockChange does not match formal parameter
found   : (string|undefined)
required: (null|string)
        this.sourceBlock_, 'field', this.name, oldValue, newValue));
                                    ^^^^^^^^^

../core/field_angle.js:268: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Field.prototype.callValidator does not match formal parameter
found   : number
required: string
  angle = this.callValidator(angle);
                             ^^^^^

../core/field_angle.js:279: WARNING - [JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH] mismatch of the setText property type and the type of the property it overrides from superclass Blockly.FieldTextInput
original: function(this:Blockly.FieldTextInput, *): undefined
override: function(this:Blockly.FieldAngle, (null|string)): undefined
Blockly.FieldAngle.prototype.setText = function(text) {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_angle.js:332: WARNING - [JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH] mismatch of the classValidator property type and the type of the property it overrides from superclass Blockly.Field
original: function(this:Blockly.Field, string): string
override: function(this:Blockly.FieldAngle, string): (null|string)
Blockly.FieldAngle.prototype.classValidator = function(text) {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_checkbox.js:109: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Events.BlockChange does not match formal parameter
found   : (string|undefined)
required: (null|string)
          this.sourceBlock_, 'field', this.name, this.state_, newState));
                                      ^^^^^^^^^

../core/field_checkbox.js:126: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Field.prototype.callValidator does not match formal parameter
found   : boolean
required: string
    newState = this.callValidator(newState);
                                  ^^^^^^^^

../core/field_colour.js:183: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Events.BlockChange does not match formal parameter
found   : (string|undefined)
required: (null|string)
        this.sourceBlock_, 'field', this.name, this.colour_, colour));
                                    ^^^^^^^^^

../core/field_dropdown.js:242: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.addClass does not match formal parameter
found   : (Element|null)
required: Element
  Blockly.utils.addClass(menu.getElement(), "blocklyDropdownMenu");
                         ^^^^^^^^^^^^^^^^^

../core/field_dropdown.js:277: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Field.prototype.callValidator does not match formal parameter
found   : *
required: string
    value = this.callValidator(value);
                               ^^^^^

../core/field_dropdown.js:280: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.FieldDropdown.prototype.setValue does not match formal parameter
found   : *
required: string
    this.setValue(value);
                  ^^^^^

../core/field_dropdown.js:386: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Object|string)
required: string
  return this.value_;
         ^^^^^^^^^^^

../core/field_dropdown.js:399: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Events.BlockChange does not match formal parameter
found   : (string|undefined)
required: (null|string)
      new Blockly.Events.BlockChange(this.sourceBlock_, "field", this.name, this.value_, newValue)
                                                                 ^^^^^^^^^

../core/field_image.js:59: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.FieldImage.prototype.setText does not match formal parameter
found   : (string|undefined)
required: (null|string)
  this.setText(opt_alt);
               ^^^^^^^

../core/field_image.js:121: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.FieldImage.prototype.setTooltip does not match formal parameter
found   : Blockly.Block
required: (Element|string)
    this.setTooltip(this.sourceBlock_);
                    ^^^^^^^^^^^^^^^^^

../core/field_image.js:148: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.bindEventWithChecks_ does not match formal parameter
found   : (SVGElement|null)
required: EventTarget
            this.fieldGroup_, 'mousedown', this, this.clickHandler_);
            ^^^^^^^^^^^^^^^^

../core/field_image.js:195: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (boolean|undefined)
required: boolean
  return this.flipRtl_;
         ^^^^^^^^^^^^^

../core/field_image.js:203: WARNING - [JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH] mismatch of the setText property type and the type of the property it overrides from superclass Blockly.Field
original: function(this:Blockly.Field, *): undefined
override: function(this:Blockly.FieldImage, (null|string)): undefined
Blockly.FieldImage.prototype.setText = function(alt) {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_label.js:105: WARNING - [JSC_TYPE_MISMATCH] assignment to property textElement_ of Blockly.FieldLabel
found   : null
required: Element
    this.textElement_ = null;
    ^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_number.js:94: WARNING - [JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH] mismatch of the classValidator property type and the type of the property it overrides from superclass Blockly.Field
original: function(this:Blockly.Field, string): string
override: function(this:Blockly.FieldNumber, string): (null|string)
Blockly.FieldNumber.prototype.classValidator = function(text) {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_textinput.js:139: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Events.BlockChange does not match formal parameter
found   : (string|undefined)
required: (null|string)
        this.sourceBlock_, 'field', this.name, this.text_, newText));
                                    ^^^^^^^^^

../core/field_textinput.js:176: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.prompt: called with 3 argument(s). Function requires at least 4 argument(s) and no more than 4 argument(s).
  Blockly.prompt(Blockly.Msg['CHANGE_VALUE_TITLE'], this.text_,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_textinput.js:203: WARNING - [JSC_TYPE_MISMATCH] assignment to property htmlInput_ of Blockly.FieldTextInput
found   : Element
required: (HTMLInputElement|null)
  Blockly.FieldTextInput.htmlInput_ = htmlInput;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_textinput.js:215: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.FieldTextInput.prototype.bindEvents_ does not match formal parameter
found   : Element
required: HTMLInputElement
  this.bindEvents_(htmlInput);
                   ^^^^^^^^^

../core/field_textinput.js:302: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.svgResize does not match formal parameter
found   : Blockly.Workspace
required: Blockly.WorkspaceSvg
  Blockly.svgResize(this.sourceBlock_.workspace);
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_textinput.js:369: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.FieldTextInput.prototype.unbindEvents_ does not match formal parameter
found   : (HTMLInputElement|null)
required: HTMLInputElement
    thisField.unbindEvents_(htmlInput);
                            ^^^^^^^^^

../core/field_variable.js:55: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Field.prototype.setValidator does not match formal parameter
found   : (Function|null|undefined)
required: (function(string): (null|string|undefined)|null)
  this.setValidator(opt_validator);
                    ^^^^^^^^^^^^^

../core/field_variable.js:59: WARNING - [JSC_TYPE_MISMATCH] assignment to property value_ of Blockly.FieldVariable
found   : null
required: (Object|string)
  this.value_ = null;
  ^^^^^^^^^^^^^^^^^^

../core/field_variable.js:108: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Variables.getOrCreateVariablePackage does not match formal parameter
found   : null
required: string
    null,
    ^^^^

../core/field_variable.js:193: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Events.BlockChange does not match formal parameter
found   : (string|undefined)
required: (null|string)
      new Blockly.Events.BlockChange(this.sourceBlock_, "field", this.name, oldValue, id)
                                                                 ^^^^^^^^^

../core/field_variable.js:205: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.changeVariableScope: called with 3 argument(s). Function requires at least 4 argument(s) and no more than 4 argument(s).
      workspace.changeVariableScope(this.variable_.name, false, "global");
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_variable.js:207: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.getAllVariableBlocks: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
      var blocks = workspace.getAllVariableBlocks();
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_variable.js:270: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Events.BlockChange does not match formal parameter
found   : (string|undefined)
required: (null|string)
      new Blockly.Events.BlockChange(this.sourceBlock_, "field", this.name, oldValue, id)
                                                                 ^^^^^^^^^

../core/field_variable.js:281: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property parentBlock_ of Blockly.Block not allowed here.
  if (this.sourceBlock_.parentBlock_) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_variable.js:282: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property parentBlock_ of Blockly.Block not allowed here.
    var parentBlock = this.sourceBlock_.parentBlock_;
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_variable.js:283: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property parentBlock_ of Blockly.Block not allowed here.
    while (parentBlock.parentBlock_) {
           ^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_variable.js:284: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property parentBlock_ of Blockly.Block not allowed here.
      parentBlock = parentBlock.parentBlock_;
                    ^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_variable.js:398: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.FieldVariable.prototype.isClassVariable: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
  var className = this.isClassVariable();
                  ^^^^^^^^^^^^^^^^^^^^^^

../core/field_variable.js:437: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Variables.renameVariable: called with 2 argument(s). Function requires at least 4 argument(s) and no more than 5 argument(s).
      Blockly.Variables.renameVariable(workspace, this.variable_);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/field_variable.js:443: WARNING - [JSC_INEXISTENT_PROPERTY] Property RENAME_CLASS_ID never defined on Blockly
    } else if (id == Blockly.RENAME_CLASS_ID) {
                             ^^^^^^^^^^^^^^^

../core/field_variable.js:450: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.FieldVariable.prototype.setValue does not match formal parameter
found   : *
required: string
  this.setValue(id);
                ^^

../core/flyout_base.js:56: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.WorkspaceSvg does not match formal parameter
found   : Object
required: Blockly.Options
  this.workspace_ = new Blockly.WorkspaceSvg(workspaceOptions);
                                             ^^^^^^^^^^^^^^^^

../core/flyout_base.js:255: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property variableMap_ of Blockly.Workspace not allowed here.
  this.workspace_.variableMap_  = this.targetWorkspace_.getVariableMap();
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/flyout_base.js:255: WARNING - [JSC_TYPE_MISMATCH] assignment to property variableMap_ of Blockly.Workspace
found   : (Blockly.VariableMap|null)
required: Blockly.VariableMap
  this.workspace_.variableMap_  = this.targetWorkspace_.getVariableMap();
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/flyout_base.js:278: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace_ of Blockly.Flyout
found   : null
required: Blockly.Workspace
    this.workspace_ = null;
    ^^^^^^^^^^^^^^^^^^^^^^

../core/flyout_base.js:310: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : Blockly.Workspace
required: Blockly.WorkspaceSvg
  return this.workspace_;
         ^^^^^^^^^^^^^^^

../core/flyout_base.js:481: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.FlyoutButton does not match formal parameter
found   : Blockly.Workspace
required: Blockly.WorkspaceSvg
        var curButton = new Blockly.FlyoutButton(this.workspace_,
                                                 ^^^^^^^^^^^^^^^

../core/flyout_base.js:529: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Block.prototype.dispose: called with 2 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
      block.dispose(false, false);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/flyout_base.js:651: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : Blockly.Block
required: (Blockly.BlockSvg|null)
  return newBlock;
         ^^^^^^^^

../core/flyout_button.js:221: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : Blockly.Workspace
required: Blockly.WorkspaceSvg
  return this.targetWorkspace_;
         ^^^^^^^^^^^^^^^^^^^^^

../core/flyout_button.js:235: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace_ of Blockly.FlyoutButton
found   : null
required: Blockly.WorkspaceSvg
  this.workspace_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^

../core/flyout_button.js:236: WARNING - [JSC_TYPE_MISMATCH] assignment to property targetWorkspace_ of Blockly.FlyoutButton
found   : null
required: Blockly.Workspace
  this.targetWorkspace_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/flyout_dragger.js:62: WARNING - [JSC_MISSING_EXTENDS_TAG] Missing @extends tag on type Blockly.FlyoutDragger
goog.inherits(Blockly.FlyoutDragger, Blockly.WorkspaceDragger);
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/flyout_horizontal.js:343: WARNING - [JSC_MISSING_RETURN_STATEMENT] Missing return statement. Function expected to return (goog.math.Rect|null).
Blockly.HorizontalFlyout.prototype.getClientRect = function() {
                                                   ^^^^^^^^^^^^

../core/flyout_horizontal.js:385: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Flyout.prototype.moveRectToBlock_ does not match formal parameter
found   : Blockly.Block
required: Blockly.BlockSvg
        this.moveRectToBlock_(block.flyoutRect_, block);
                                                 ^^^^^

../core/flyout_vertical.js:358: WARNING - [JSC_INEXISTENT_PROPERTY] Property leftEdge_ never defined on Blockly.VerticalFlyout
        x = x + this.leftEdge_ * scale;
                     ^^^^^^^^^

../core/flyout_vertical.js:398: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Flyout.prototype.moveRectToBlock_ does not match formal parameter
found   : Blockly.Block
required: Blockly.BlockSvg
        this.moveRectToBlock_(block.flyoutRect_, block);
                                                 ^^^^^

../core/generator.js:190: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Generator.prototype.scrub_: called with 3 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
    return [this.scrub_(block, code[0], opt_thisOnly), code[1]];
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/generator.js:196: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Generator.prototype.scrub_: called with 3 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
    return this.scrub_(block, code, opt_thisOnly);
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/generator.js:360: WARNING - [JSC_INEXISTENT_PROPERTY] Property definitions_ never defined on Blockly.Generator
  if (!this.definitions_[desiredName]) {
            ^^^^^^^^^^^^

../core/generator.js:361: WARNING - [JSC_INEXISTENT_PROPERTY] Property variableDB_ never defined on Blockly.Generator
    var functionName = this.variableDB_.getDistinctName(desiredName,
                            ^^^^^^^^^^^

../core/generator.js:363: WARNING - [JSC_INEXISTENT_PROPERTY] Property functionNames_ never defined on Blockly.Generator
    this.functionNames_[desiredName] = functionName;
         ^^^^^^^^^^^^^^

../core/generator.js:376: WARNING - [JSC_INEXISTENT_PROPERTY] Property definitions_ never defined on Blockly.Generator
    this.definitions_[desiredName] = codeText;
         ^^^^^^^^^^^^

../core/generator.js:378: WARNING - [JSC_INEXISTENT_PROPERTY] Property functionNames_ never defined on Blockly.Generator
  return this.functionNames_[desiredName];
              ^^^^^^^^^^^^^^

../core/gesture.js:288: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property longStop_ of Blockly not allowed here.
    Blockly.longStop_();
    ^^^^^^^^^^^^^^^^^

../core/gesture.js:303: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of goog.math.Coordinate.difference does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
      this.mouseDownXY_);
      ^^^^^^^^^^^^^^^^^

../core/gesture.js:330: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Flyout.prototype.isBlockCreatable_ does not match formal parameter
found   : (Blockly.BlockSvg|null)
required: Blockly.BlockSvg
  if (!this.flyout_.isBlockCreatable_(this.targetBlock_)) {
                                      ^^^^^^^^^^^^^^^^^

../core/gesture.js:344: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Flyout.prototype.createBlock does not match formal parameter
found   : (Blockly.BlockSvg|null)
required: Blockly.BlockSvg
    this.targetBlock_ = this.flyout_.createBlock(this.targetBlock_);
                                                 ^^^^^^^^^^^^^^^^^

../core/gesture.js:414: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspaceDragger_ of Blockly.Gesture
found   : Blockly.FlyoutDragger
required: (Blockly.WorkspaceDragger|null)
    this.workspaceDragger_ = new Blockly.FlyoutDragger(this.flyout_);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:416: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.WorkspaceDragger does not match formal parameter
found   : (Blockly.WorkspaceSvg|null)
required: Blockly.WorkspaceSvg
    this.workspaceDragger_ = new Blockly.WorkspaceDragger(this.startWorkspace_);
                                                          ^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:453: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.BlockDragger does not match formal parameter
found   : (Blockly.BlockSvg|null)
required: Blockly.BlockSvg
  this.blockDragger_ = new Blockly.BlockDragger(this.targetBlock_,
                                                ^^^^^^^^^^^^^^^^^

../core/gesture.js:454: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BlockDragger does not match formal parameter
found   : (Blockly.WorkspaceSvg|null)
required: Blockly.WorkspaceSvg
      this.startWorkspace_);
      ^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:455: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.BlockDragger.prototype.startBlockDrag does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
  this.blockDragger_.startBlockDrag(this.currentDragDeltaXY_, this.healStack_);
                                    ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:457: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BlockDragger.prototype.dragBlock does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
      this.currentDragDeltaXY_);
      ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:466: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.BubbleDragger does not match formal parameter
found   : (Blockly.Bubble|null)
required: (Blockly.Bubble|Blockly.WorkspaceCommentSvg)
  this.bubbleDragger_ = new Blockly.BubbleDragger(this.startBubble_,
                                                  ^^^^^^^^^^^^^^^^^

../core/gesture.js:467: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BubbleDragger does not match formal parameter
found   : (Blockly.WorkspaceSvg|null)
required: Blockly.WorkspaceSvg
      this.startWorkspace_);
      ^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:470: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BubbleDragger.prototype.dragBubble does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
      this.currentDragDeltaXY_);
      ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:512: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property longStart_ of Blockly not allowed here.
    Blockly.longStart_(e, this);
    ^^^^^^^^^^^^^^^^^^

../core/gesture.js:544: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.WorkspaceDragger.prototype.drag does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
    this.workspaceDragger_.drag(this.currentDragDeltaXY_);
                                ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:547: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BlockDragger.prototype.dragBlock does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
        this.currentDragDeltaXY_);
        ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:550: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BubbleDragger.prototype.dragBubble does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
        this.currentDragDeltaXY_);
        ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:563: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property longStop_ of Blockly not allowed here.
  Blockly.longStop_();
  ^^^^^^^^^^^^^^^^^

../core/gesture.js:576: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BubbleDragger.prototype.endBubbleDrag does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
    this.bubbleDragger_.endBubbleDrag(e, this.currentDragDeltaXY_);
                                         ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:578: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BlockDragger.prototype.endBlockDrag does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
    this.blockDragger_.endBlockDrag(e, this.currentDragDeltaXY_);
                                       ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:580: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.WorkspaceDragger.prototype.endDrag does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
    this.workspaceDragger_.endDrag(this.currentDragDeltaXY_);
                                   ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:609: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property longStop_ of Blockly not allowed here.
  Blockly.longStop_();
  ^^^^^^^^^^^^^^^^^

../core/gesture.js:612: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BubbleDragger.prototype.endBubbleDrag does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
        this.currentDragDeltaXY_);
        ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:615: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BlockDragger.prototype.endBlockDrag does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
        this.currentDragDeltaXY_);
        ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:617: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.WorkspaceDragger.prototype.endDrag does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
    this.workspaceDragger_.endDrag(this.currentDragDeltaXY_);
                                   ^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:630: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.hideChaff does not match formal parameter
found   : (Blockly.Flyout|null)
required: (boolean|undefined)
    Blockly.hideChaff(this.flyout_);
                      ^^^^^^^^^^^^

../core/gesture.js:631: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property showContextMenu_ of Blockly.BlockSvg not allowed here.
    this.targetBlock_.showContextMenu_(e);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:633: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property showContextMenu_ of Blockly.Bubble not allowed here.
    this.startBubble_.showContextMenu_(e);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:636: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property showContextMenu_ of Blockly.WorkspaceSvg not allowed here.
    this.startWorkspace_.showContextMenu_(e);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:657: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Gesture.prototype.setStartWorkspace_ does not match formal parameter
found   : Blockly.Workspace
required: (Blockly.WorkspaceSvg|null)
  this.setStartWorkspace_(ws);
                          ^^

../core/gesture.js:819: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Gesture.prototype.setTargetBlock_ does not match formal parameter
found   : Blockly.Block
required: (Blockly.BlockSvg|null)
      this.setTargetBlock_(block.getRootBlock());
                           ^^^^^^^^^^^^^^^^^^^^

../core/gesture.js:835: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Gesture.prototype.setTargetBlock_ does not match formal parameter
found   : (Blockly.Block|null)
required: (Blockly.BlockSvg|null)
    this.setTargetBlock_(block.getParent());
                         ^^^^^^^^^^^^^^^^^

../core/grid.js:71: WARNING - [JSC_TYPE_MISMATCH] assignment to property line1_ of Blockly.Grid
found   : (Node|null)
required: (SVGElement|null)
  this.line1_ = pattern.firstChild;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/grid.js:78: WARNING - [JSC_TYPE_MISMATCH] assignment to property line2_ of Blockly.Grid
found   : (Node|null)
required: (SVGElement|null)
  this.line2_ = this.line1_ && this.line1_.nextSibling;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/grid.js:101: WARNING - [JSC_TYPE_MISMATCH] assignment to property gridPattern_ of Blockly.Grid
found   : null
required: SVGElement
  this.gridPattern_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^

../core/grid.js:153: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Grid.prototype.setLineAttributes_ does not match formal parameter
found   : (SVGElement|null)
required: SVGElement
  this.setLineAttributes_(this.line1_, scale, start, end, half, half);
                          ^^^^^^^^^^^

../core/grid.js:154: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Grid.prototype.setLineAttributes_ does not match formal parameter
found   : (SVGElement|null)
required: SVGElement
  this.setLineAttributes_(this.line2_, scale, half, half, start, end);
                          ^^^^^^^^^^^

../core/icon.js:206: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
  return this.iconXY_;
         ^^^^^^^^^^^^

../core/inject.js:53: WARNING - [JSC_TYPE_MISMATCH] assignment
found   : (Element|null)
required: (Element|string)
    container = document.getElementById(container) ||
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/inject.js:57: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.utils.containsNode does not match formal parameter
found   : (Element|null)
required: Node
  if (!Blockly.utils.containsNode(document, container)) {
                                            ^^^^^^^^^

../core/inject.js:78: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.svgResize does not match formal parameter
found   : Blockly.Workspace
required: Blockly.WorkspaceSvg
  Blockly.svgResize(workspace);
                    ^^^^^^^^^

../core/inject.js:222: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property addFlyout_ of Blockly.WorkspaceSvg not allowed here.
    var flyout = mainWorkspace.addFlyout_('svg');
                 ^^^^^^^^^^^^^^^^^^^^^^^^

../core/inject.js:335: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Events.setGroup does not match formal parameter
found   : (null|string)
required: (boolean|string)
            Blockly.Events.setGroup(oldGroup);
                                    ^^^^^^^^

../core/inject.js:372: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.svgResize does not match formal parameter
found   : Blockly.Workspace
required: Blockly.WorkspaceSvg
        Blockly.svgResize(mainWorkspace);
                          ^^^^^^^^^^^^^

../core/inject.js:431: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property onKeyDown_ of Blockly not allowed here.
    Blockly.bindEventWithChecks_(document, 'keydown', null, Blockly.onKeyDown_);
                                                            ^^^^^^^^^^^^^^^^^^

../core/inject.js:434: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property longStop_ of Blockly not allowed here.
    Blockly.bindEvent_(document, 'touchend', null, Blockly.longStop_);
                                                   ^^^^^^^^^^^^^^^^^

../core/inject.js:435: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property longStop_ of Blockly not allowed here.
    Blockly.bindEvent_(document, 'touchcancel', null, Blockly.longStop_);
                                                      ^^^^^^^^^^^^^^^^^

../core/inject.js:441: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.svgResize does not match formal parameter
found   : Blockly.Workspace
required: Blockly.WorkspaceSvg
            Blockly.svgResize(Blockly.getMainWorkspace());
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/input.js:130: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property bumpNeighbours_ of Blockly.Block not allowed here.
    this.sourceBlock_.bumpNeighbours_();
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/input.js:148: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property bumpNeighbours_ of Blockly.Block not allowed here.
        this.sourceBlock_.bumpNeighbours_();
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/input.js:249: WARNING - [JSC_TYPE_MISMATCH] assignment to property sourceBlock_ of Blockly.Input
found   : null
required: Blockly.Block
  this.sourceBlock_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:60: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace_ of Blockly.InsertionMarkerManager
found   : Blockly.Workspace
required: Blockly.WorkspaceSvg
  this.workspace_ = block.workspace;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:155: WARNING - [JSC_TYPE_MISMATCH] assignment to property topBlock_ of Blockly.InsertionMarkerManager
found   : null
required: Blockly.Block
  this.topBlock_ = null;
  ^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:156: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace_ of Blockly.InsertionMarkerManager
found   : null
required: Blockly.WorkspaceSvg
  this.workspace_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:164: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.BlockSvg.prototype.dispose: called with 0 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      this.firstMarker_.dispose();
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:168: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.BlockSvg.prototype.dispose: called with 0 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      this.lastMarker_.dispose();
      ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:218: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.BlockAnimations.connectionUiEffect does not match formal parameter
found   : (Blockly.Block|null)
required: Blockly.BlockSvg
          inferiorConnection.getSourceBlock());
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:266: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.BlockSvg.prototype.setInsertionMarker: called with 2 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
    result.setInsertionMarker(true, sourceBlock.width);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:270: WARNING - [JSC_INEXISTENT_PROPERTY] Property domToMutation never defined on Blockly.BlockSvg
        result.domToMutation(oldMutationDom);
               ^^^^^^^^^^^^^

../core/insertion_marker_manager.js:280: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Block.prototype.setFieldValue does not match formal parameter
found   : (string|undefined)
required: string
        result.setFieldValue(field.getValue(), field.name);
                                               ^^^^^^^^^^

../core/insertion_marker_manager.js:303: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property getConnections_ of Blockly.Block not allowed here.
  var available = this.topBlock_.getConnections_(false);
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:308: WARNING - [JSC_TYPE_MISMATCH] assignment to property lastOnStack_ of Blockly.InsertionMarkerManager
found   : Blockly.Connection
required: (Blockly.RenderedConnection|null)
    this.lastOnStack_ = lastOnStack;
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:309: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.Connection not allowed here.
    this.lastMarker_ = this.createMarkerBlock_(lastOnStack.sourceBlock_);
                                               ^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:309: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.InsertionMarkerManager.prototype.createMarkerBlock_ does not match formal parameter
found   : Blockly.Block
required: Blockly.BlockSvg
    this.lastMarker_ = this.createMarkerBlock_(lastOnStack.sourceBlock_);
                                               ^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:343: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property x_ of Blockly.RenderedConnection not allowed here.
      var xDiff = this.localConnection_.x_ + dxy.x - this.closestConnection_.x_;
                  ^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:343: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property x_ of Blockly.RenderedConnection not allowed here.
      var xDiff = this.localConnection_.x_ + dxy.x - this.closestConnection_.x_;
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:344: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.RenderedConnection not allowed here.
      var yDiff = this.localConnection_.y_ + dxy.y - this.closestConnection_.y_;
                  ^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:344: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property y_ of Blockly.RenderedConnection not allowed here.
      var yDiff = this.localConnection_.y_ + dxy.y - this.closestConnection_.y_;
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:427: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property lastConnectionInRow_ of Blockly.Connection not allowed here.
      Blockly.Connection.lastConnectionInRow_(this.topBlock_,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:428: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Connection.lastConnectionInRow_ does not match formal parameter
found   : (Blockly.Block|null)
required: Blockly.Block
          closest.targetConnection.getSourceBlock())) {
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:437: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.RenderedConnection not allowed here.
  if (local == local.sourceBlock_.getFirstStatementConnection()) {
               ^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:589: WARNING - [JSC_TYPE_MISMATCH] assignment to property highlightedBlock_ of Blockly.InsertionMarkerManager
found   : (Blockly.Block|null)
required: (Blockly.BlockSvg|null)
    this.highlightedBlock_ = closest.targetBlock();
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:592: WARNING - [JSC_TYPE_MISMATCH] assignment to property highlightedBlock_ of Blockly.InsertionMarkerManager
found   : Blockly.Block
required: (Blockly.BlockSvg|null)
    this.highlightedBlock_ = closest.sourceBlock_;
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:592: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.RenderedConnection not allowed here.
    this.highlightedBlock_ = closest.sourceBlock_;
                             ^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:594: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.RenderedConnection not allowed here.
    closest.sourceBlock_.highlightShapeForInput(closest, true);
    ^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:594: WARNING - [JSC_INEXISTENT_PROPERTY] Property highlightShapeForInput never defined on Blockly.Block
    closest.sourceBlock_.highlightShapeForInput(closest, true);
                         ^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:607: WARNING - [JSC_INEXISTENT_PROPERTY] Property highlightShapeForInput never defined on Blockly.BlockSvg
    this.highlightedBlock_.highlightShapeForInput(closest, false);
                           ^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:631: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.RenderedConnection not allowed here.
  var imBlock = imConn.sourceBlock_;
                ^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:649: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.Connection not allowed here.
    innerConnection.sourceBlock_.unplug(false);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:680: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.RenderedConnection not allowed here.
  var imConn = imBlock.getMatchingConnection(local.sourceBlock_, local);
                                             ^^^^^^^^^^^^^^^^^^

../core/insertion_marker_manager.js:692: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.BlockSvg.prototype.positionNewBlock does not match formal parameter
found   : (Blockly.Connection|null)
required: Blockly.Connection
  imBlock.positionNewBlock(imBlock, imConn, closest);
                                    ^^^^^^

../core/insertion_marker_manager.js:692: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.BlockSvg.prototype.positionNewBlock does not match formal parameter
found   : (Blockly.RenderedConnection|null)
required: Blockly.Connection
  imBlock.positionNewBlock(imBlock, imConn, closest);
                                            ^^^^^^^

../core/insertion_marker_manager.js:695: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.prototype.connect does not match formal parameter
found   : (Blockly.RenderedConnection|null)
required: Blockly.Connection
  imConn.connect(closest);
                 ^^^^^^^

../core/insertion_marker_manager.js:696: WARNING - [JSC_TYPE_MISMATCH] assignment to property markerConnection_ of Blockly.InsertionMarkerManager
found   : Blockly.Connection
required: (Blockly.RenderedConnection|null)
  this.markerConnection_ = imConn;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/mutator.js:158: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.WorkspaceSvg does not match formal parameter
found   : {
  RTL: boolean,
  disable: boolean,
  disabledPatternId: ?,
  getMetrics: function(): Object,
  horizontalLayout: boolean,
  languageTree: (Element|null),
  parentWorkspace: Blockly.Workspace,
  pathToMedia: ?,
  setMetrics: null,
  toolboxPosition: number, ...
}
required: Blockly.Options
  this.workspace_ = new Blockly.WorkspaceSvg(workspaceOptions);
                                             ^^^^^^^^^^^^^^^^

../core/mutator.js:166: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property addFlyout_ of Blockly.WorkspaceSvg not allowed here.
  var flyoutSvg =  this.workspace_.addFlyout_('g');
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/mutator.js:259: WARNING - [JSC_TYPE_MISMATCH] actual parameter 4 of Blockly.Bubble does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
        this.createEditor_(), this.block_.svgPath_, this.iconXY_, null, null);
                                                    ^^^^^^^^^^^^

../core/mutator.js:268: WARNING - [JSC_INEXISTENT_PROPERTY] Property decompose never defined on Blockly.Block
    this.rootBlock_ = this.block_.decompose(this.workspace_);
                                  ^^^^^^^^^

../core/mutator.js:292: WARNING - [JSC_INEXISTENT_PROPERTY] Property saveConnections never defined on Blockly.Block
        thisMutator.block_.saveConnections(thisMutator.rootBlock_);
                           ^^^^^^^^^^^^^^^

../core/mutator.js:347: WARNING - [JSC_INEXISTENT_PROPERTY] Property mutationToDom never defined on Blockly.Block
    var oldMutationDom = block.mutationToDom();
                               ^^^^^^^^^^^^^

../core/mutator.js:353: WARNING - [JSC_INEXISTENT_PROPERTY] Property compose never defined on Blockly.Block
    block.compose(this.rootBlock_);
          ^^^^^^^

../core/mutator.js:358: WARNING - [JSC_INEXISTENT_PROPERTY] Property mutationToDom never defined on Blockly.Block
    var newMutationDom = block.mutationToDom();
                               ^^^^^^^^^^^^^

../core/options.js:161: WARNING - [JSC_TYPE_MISMATCH] assignment to property getMetrics of Blockly.Options.prototype
found   : null
required: function(this:Blockly.Options): (Object|null)
Blockly.Options.prototype.getMetrics = null;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/procedures.js:63: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureDef never defined on Blockly.Block
      var tuple = blocks[i].getProcedureDef();
                            ^^^^^^^^^^^^^^^

../core/procedures.js:143: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureDef never defined on Blockly.Block
      var procName = blocks[i].getProcedureDef();
                               ^^^^^^^^^^^^^^^

../core/procedures.js:163: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.Field not allowed here.
  var legalName = Blockly.Procedures.findLegalName(name, this.sourceBlock_);
                                                         ^^^^^^^^^^^^^^^^^

../core/procedures.js:163: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Procedures.findLegalName does not match formal parameter
found   : (Blockly.Block|null)
required: Blockly.Block
  var legalName = Blockly.Procedures.findLegalName(name, this.sourceBlock_);
                                                         ^^^^^^^^^^^^^^^^^

../core/procedures.js:164: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property text_ of Blockly.Field not allowed here.
  var oldName = this.text_;
                ^^^^^^^^^^

../core/procedures.js:167: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property sourceBlock_ of Blockly.Field not allowed here.
    var blocks = this.sourceBlock_.workspace.getAllBlocks(false);
                 ^^^^^^^^^^^^^^^^^

../core/procedures.js:170: WARNING - [JSC_INEXISTENT_PROPERTY] Property renameProcedure never defined on Blockly.Block
        blocks[i].renameProcedure(oldName, legalName);
                  ^^^^^^^^^^^^^^^

../core/procedures.js:173: WARNING - [JSC_INEXISTENT_PROPERTY] Property update never defined on Blockly.Block
        blocks[i].update(oldName, legalName);
                  ^^^^^^

../core/procedures.js:271: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureCall never defined on Blockly.Block
      var procName = blocks[i].getProcedureCall();
                               ^^^^^^^^^^^^^^^^

../core/procedures.js:288: WARNING - [JSC_INEXISTENT_PROPERTY] Property callType_ never defined on Blockly.Block
    defBlock.callType_ == "procedures_callnoreturn" ||
             ^^^^^^^^^

../core/procedures.js:289: WARNING - [JSC_INEXISTENT_PROPERTY] Property callType_ never defined on Blockly.Block
    defBlock.callType_ == "procedures_callreturn"
             ^^^^^^^^^

../core/procedures.js:291: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureDef never defined on Blockly.Block
    var name = defBlock.getProcedureDef()[0];
                        ^^^^^^^^^^^^^^^

../core/procedures.js:292: WARNING - [JSC_INEXISTENT_PROPERTY] Property callType_ never defined on Blockly.Block
  } else if (defBlock.callType_ == "class_constructor") {
                      ^^^^^^^^^

../core/procedures.js:293: WARNING - [JSC_INEXISTENT_PROPERTY] Property getConstructorDef never defined on Blockly.Block
    var name = defBlock.getConstructorDef()[0];
                        ^^^^^^^^^^^^^^^^^

../core/procedures.js:295: WARNING - [JSC_INEXISTENT_PROPERTY] Property getMethodDef never defined on Blockly.Block
    var name = defBlock.getMethodDef()[0];
                        ^^^^^^^^^^^^

../core/procedures.js:298: WARNING - [JSC_INEXISTENT_PROPERTY] Property mutationToDom never defined on Blockly.Block
  var xmlElement = defBlock.mutationToDom(true);
                            ^^^^^^^^^^^^^

../core/procedures.js:301: WARNING - [JSC_INEXISTENT_PROPERTY] Property mutationToDom never defined on Blockly.Block
    var oldMutationDom = caller.mutationToDom();
                                ^^^^^^^^^^^^^

../core/procedures.js:303: WARNING - [JSC_INEXISTENT_PROPERTY] Property domToMutation never defined on Blockly.Block
    caller.domToMutation(xmlElement);
           ^^^^^^^^^^^^^

../core/procedures.js:304: WARNING - [JSC_INEXISTENT_PROPERTY] Property mutationToDom never defined on Blockly.Block
    var newMutationDom = caller.mutationToDom();
                                ^^^^^^^^^^^^^

../core/procedures.js:330: WARNING - [JSC_INEXISTENT_PROPERTY] Property getProcedureDef never defined on Blockly.Block
      var tuple = blocks[i].getProcedureDef();
                            ^^^^^^^^^^^^^^^

../core/rendered_connection.js:124: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property removeConnection_ of Blockly.ConnectionDB not allowed here.
    this.db_.removeConnection_(this);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/rendered_connection.js:251: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property getConnections_ of Blockly.Block not allowed here.
      connections = block.getConnections_(true);
                    ^^^^^^^^^^^^^^^^^^^^^

../core/rendered_connection.js:279: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property removeConnection_ of Blockly.ConnectionDB not allowed here.
    this.db_.removeConnection_(this);
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/rendered_connection.js:297: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property getConnections_ of Blockly.Block not allowed here.
      var connections = block.getConnections_(true);
                        ^^^^^^^^^^^^^^^^^^^^^

../core/rendered_connection.js:317: WARNING - [JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH] mismatch of the isConnectionAllowed property type and the type of the property it overrides from superclass Blockly.Connection
original: function(this:Blockly.Connection, Blockly.Connection): boolean
override: function(this:Blockly.RenderedConnection, Blockly.Connection, number): boolean
Blockly.RenderedConnection.prototype.isConnectionAllowed = function(candidate,
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/rendered_connection.js:378: WARNING - [JSC_PRIVATE_OVERRIDE] Overriding private property of Blockly.Connection.prototype.
Blockly.RenderedConnection.prototype.neighbours_ = function(maxLimit) {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/rendered_connection.js:378: WARNING - [JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH] mismatch of the neighbours_ property type and the type of the property it overrides from superclass Blockly.Connection
original: function(this:Blockly.Connection): Array<Blockly.Connection>
override: function(this:Blockly.RenderedConnection, number): Array<Blockly.Connection>
Blockly.RenderedConnection.prototype.neighbours_ = function(maxLimit) {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/rendered_connection.js:419: WARNING - [JSC_PRIVATE_OVERRIDE] Overriding private property of Blockly.Connection.prototype.
Blockly.RenderedConnection.prototype.onCheckChanged_ = function() {
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/rendered_connection.js:421: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Connection.prototype.checkType_ does not match formal parameter
found   : (Blockly.Connection|null)
required: Blockly.Connection
  if (this.isConnected() && !this.checkType_(this.targetConnection)) {
                                             ^^^^^^^^^^^^^^^^^^^^^

../core/rendered_connection.js:425: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property bumpNeighbours_ of Blockly.Block not allowed here.
    this.sourceBlock_.bumpNeighbours_();
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/scrollbar.js:262: WARNING - [JSC_TYPE_MISMATCH] assignment to property startDragMouse_ of Blockly.Scrollbar.prototype
found   : number
required: (goog.math.Coordinate|null)
Blockly.Scrollbar.prototype.startDragMouse_ = 0;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/scrollbar.js:434: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Scrollbar.metricsAreEquivalent_ does not match formal parameter
found   : null
required: Object
      this.oldHostMetrics_)) {
      ^^^^^^^^^^^^^^^^^^^^

../core/scrollbar.js:758: WARNING - [JSC_TYPE_MISMATCH] assignment to property startDragMouse_ of Blockly.Scrollbar
found   : number
required: (goog.math.Coordinate|null)
  this.startDragMouse_ = this.horizontal_ ? e.clientX : e.clientY;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/theme.js:29: WARNING - [JSC_UNRECOGNIZED_TYPE_ERROR] Bad type annotation. Unknown type Blockly.BlockStyle
 * @param {Object.<string, Blockly.BlockStyle>} blockStyles A map from style
                           ^

../core/theme.js:31: WARNING - [JSC_UNRECOGNIZED_TYPE_ERROR] Bad type annotation. Unknown type Blockly.CategoryStyle
 * @param {Object.<string, Blockly.CategoryStyle>} categoryStyles A map from
                           ^

../core/theme.js:43: WARNING - [JSC_UNRECOGNIZED_TYPE_ERROR] Bad type annotation. Unknown type Blockly.BlockStyle
 * @param {Object.<string, Blockly.BlockStyle>} blockStyles List of
                           ^

../core/theme.js:57: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Object<string,(?|null)>|null)
required: (Array<(String|null)>|null)
  return this.blockStyles_;
         ^^^^^^^^^^^^^^^^^

../core/theme.js:63: WARNING - [JSC_UNRECOGNIZED_TYPE_ERROR] Bad type annotation. Unknown type Blockly.BlockStyle
 * @return {Blockly.BlockStyle} The style with the block style name.
            ^

../core/theme.js:72: WARNING - [JSC_UNRECOGNIZED_TYPE_ERROR] Bad type annotation. Unknown type Blockly.BlockStyle
 * @param {Blockly.BlockStyle} blockStyle The block style
           ^

../core/theme.js:81: WARNING - [JSC_UNRECOGNIZED_TYPE_ERROR] Bad type annotation. Unknown type Blockly.CategoryStyle
 * @return {Blockly.CategoryStyle} The style with the block style name.
            ^

../core/theme.js:90: WARNING - [JSC_UNRECOGNIZED_TYPE_ERROR] Bad type annotation. Unknown type Blockly.CategoryStyle
 * @param {Blockly.CategoryStyle} categoryStyle The category style
           ^

../core/toolbox.js:187: WARNING - [JSC_TYPE_MISMATCH] assignment to property flyout_ of Blockly.Toolbox
found   : null
required: Blockly.Flyout
  this.flyout_ = null;
  ^^^^^^^^^^^^^^^^^^^

../core/toolbox.js:207: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Toolbox.prototype.populate_ does not match formal parameter
found   : (Node|null)
required: Node
  var openNode = this.populate_(workspace.options.languageTree);
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/toolbox.js:210: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Toolbox.TreeControl.prototype.setSelectedItem does not match formal parameter
found   : Node
required: (goog.ui.tree.BaseNode|null)
    tree.setSelectedItem(openNode);
                         ^^^^^^^^

../core/toolbox.js:223: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace_ of Blockly.Toolbox
found   : null
required: Blockly.Workspace
  this.workspace_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^

../core/toolbox.js:480: WARNING - [JSC_INEXISTENT_PROPERTY] Property selectedItem_ never defined on Blockly.Toolbox.TreeNode
  var selectedItem = tree.selectedItem_;
                          ^^^^^^^^^^^^^

../core/toolbox.js:484: WARNING - [JSC_INEXISTENT_PROPERTY] Property toolbox_ never defined on Blockly.Toolbox.TreeNode
    tree.toolbox_.addColour_(selectedItem);
         ^^^^^^^^

../core/toolbox.js:614: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.bindEventWithChecks_ does not match formal parameter
found   : (Element|null)
required: EventTarget
    Blockly.bindEventWithChecks_(el, goog.events.EventType.TOUCHEND, this,
                                 ^^

../core/toolbox.js:625: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property getNodeFromEvent_ of goog.ui.tree.TreeControl not allowed here.
  var node = this.getNodeFromEvent_(e);
             ^^^^^^^^^^^^^^^^^^^^^^

../core/toolbox.js:665: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Toolbox.prototype.addColour_ does not match formal parameter
found   : goog.ui.tree.BaseNode
required: (Blockly.Toolbox.TreeNode|null|undefined)
    toolbox.addColour_(node);
                       ^^^^

../core/toolbox.js:706: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.svgResize does not match formal parameter
found   : Blockly.Workspace
required: Blockly.WorkspaceSvg
      Blockly.svgResize(toolbox.workspace_);
                        ^^^^^^^^^^^^^^^^^^

../core/toolbox.js:733: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property isUserCollapsible_ of goog.ui.tree.BaseNode not allowed here.
  if (this.hasChildren() && this.isUserCollapsible_) {
                            ^^^^^^^^^^^^^^^^^^^^^^^

../core/toolbox.js:777: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property rightToLeft_ of goog.ui.Component not allowed here.
    map[goog.events.KeyCodes.RIGHT] = this.rightToLeft_ ? prev : next;
                                      ^^^^^^^^^^^^^^^^^

../core/toolbox.js:778: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property rightToLeft_ of goog.ui.Component not allowed here.
    map[goog.events.KeyCodes.LEFT] = this.rightToLeft_ ? next : prev;
                                     ^^^^^^^^^^^^^^^^^

../core/tooltip.js:232: WARNING - [JSC_DETERMINISTIC_TEST] condition always evaluates to false
left : null
right: None
  } else if (Blockly.Tooltip.poisonedElement_ != Blockly.Tooltip.element_) {
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/touch_gesture.js:157: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property longStop_ of Blockly not allowed here.
      Blockly.longStop_();
      ^^^^^^^^^^^^^^^^^

../core/touch_gesture.js:179: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property longStop_ of Blockly not allowed here.
    Blockly.longStop_();
    ^^^^^^^^^^^^^^^^^

../core/touch_gesture.js:243: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of goog.math.Coordinate.distance does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
    this.startDistance_ = goog.math.Coordinate.distance(point0, point1);
                                                        ^^^^^^

../core/touch_gesture.js:243: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of goog.math.Coordinate.distance does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
    this.startDistance_ = goog.math.Coordinate.distance(point0, point1);
                                                                ^^^^^^

../core/touch_gesture.js:266: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of goog.math.Coordinate.distance does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
    var moveDistance = goog.math.Coordinate.distance(point0, point1);
                                                     ^^^^^^

../core/touch_gesture.js:266: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of goog.math.Coordinate.distance does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
    var moveDistance = goog.math.Coordinate.distance(point0, point1);
                                                             ^^^^^^

../core/touch_gesture.js:277: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.utils.mouseToSvg does not match formal parameter
found   : (Element|null)
required: Element
          e, workspace.getParentSvg(), workspace.getInverseScreenCTM());
             ^^^^^^^^^^^^^^^^^^^^^^^^

../core/trashcan.js:314: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace_ of Blockly.Trashcan
found   : null
required: Blockly.Workspace
  this.workspace_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^

../core/ui_events.js:49: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspaceId of Blockly.Events.Ui
found   : (null|string)
required: (string|undefined)
  this.workspaceId = block ? block.workspace.id : null;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/utils.js:52: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Element.prototype.setAttribute does not match formal parameter
found   : null
required: (TrustedHTML|TrustedScriptURL|TrustedURL|boolean|number|string)
    element.setAttribute(attributeName, null);
                                        ^^^^

../core/utils.js:204: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.getRelativeXY does not match formal parameter
found   : Node
required: Element
    var xy = Blockly.utils.getRelativeXY(element);
                                         ^^^^^^^

../core/utils.js:211: WARNING - [JSC_TYPE_MISMATCH] assignment
found   : (Node|null)
required: Element
    element = element.parentNode;
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/utils.js:302: WARNING - [JSC_MISSING_RETURN_STATEMENT] Missing return statement. Function expected to return {x: number, y: number}.
Blockly.utils.getScrollDeltaPixels = function(e) {
                                     ^^^^^^^^^^^^^

../core/utils.js:435: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (number|string)
required: string
  return interpolatedResult.length ? interpolatedResult[0] : '';
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/variable_map.js:179: WARNING - [JSC_OPTIONAL_ARG_AT_END] optional arguments must be at the end
Blockly.VariableMap.prototype.createVariable = function(name, opt_type, opt_id, opt_scope) {
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/variable_map.js:203: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.VariableModel: called with 5 argument(s). Function requires at least 2 argument(s) and no more than 4 argument(s).
  variable = new Blockly.VariableModel(this.workspace, name, opt_type, opt_id, scope);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/variable_map.js:246: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: variables
      var variables = this.scopeMap_[oldScope];
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/variable_map.js:351: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.VariableMap.prototype.deleteVariableInternal_ does not match formal parameter
found   : (Blockly.VariableModel|null)
required: Blockly.VariableModel
          map.deleteVariableInternal_(variable, uses);
                                      ^^^^^^^^

../core/variable_map.js:377: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Block.prototype.dispose: called with 2 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
      uses[i].dispose(true, false);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/variable_model.js:46: WARNING - [JSC_OPTIONAL_ARG_AT_END] optional arguments must be at the end
Blockly.VariableModel = function(workspace, name, opt_type, opt_id, opt_scope) {
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/variables.js:118: WARNING - [JSC_INEXISTENT_PROPERTY] Property getDeveloperVariables never defined on Blockly.Block
    var getDeveloperVariables = block.getDeveloperVariables;
                                      ^^^^^^^^^^^^^^^^^^^^^

../core/variables.js:176: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Variables.createVariableButtonHandler: called with 5 argument(s). Function requires at least 1 argument(s) and no more than 3 argument(s).
      Blockly.Variables.createVariableButtonHandler(
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/variables.js:178: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Variables.createVariableButtonHandler does not match formal parameter
found   : boolean
required: (function((null|string)=): ?|undefined)
        false,
        ^^^^^

../core/variables.js:179: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Variables.createVariableButtonHandler does not match formal parameter
found   : boolean
required: (string|undefined)
        false,
        ^^^^^

../core/variables.js:211: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Variables.generateVariableFieldXmlString does not match formal parameter
found   : (Blockly.VariableModel|null)
required: Blockly.VariableModel
        Blockly.Variables.generateVariableFieldXmlString(firstVariable) +
                                                         ^^^^^^^^^^^^^

../core/variables.js:224: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Variables.generateVariableFieldXmlString does not match formal parameter
found   : (Blockly.VariableModel|null)
required: Blockly.VariableModel
        Blockly.Variables.generateVariableFieldXmlString(firstVariable) +
                                                         ^^^^^^^^^^^^^

../core/variables.js:263: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Variables.generateVariableFieldXmlString does not match formal parameter
found   : (Blockly.VariableModel|null)
required: Blockly.VariableModel
          Blockly.Variables.generateVariableFieldXmlString(firstVariable) +
                                                           ^^^^^^^^^^^^^

../core/variables.js:274: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Variables.generateVariableFieldXmlString does not match formal parameter
found   : (Blockly.VariableModel|null)
required: Blockly.VariableModel
          Blockly.Variables.generateVariableFieldXmlString(firstVariable) +
                                                           ^^^^^^^^^^^^^

../core/variables.js:371: WARNING - [JSC_OPTIONAL_ARG_AT_END] optional arguments must be at the end
Blockly.Variables.createVariableButtonHandler = function(
                                                ^^^^^^^^^

../core/variables.js:380: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: opt_obj
    var opt_obj = false;
        ^^^^^^^^^^^^^^^

../core/variables.js:387: WARNING - [JSC_INEXISTENT_PROPERTY] Property varName never defined on String
      var varName = text.varName;
                         ^^^^^^^

../core/variables.js:404: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.createVariable: called with 4 argument(s). Function requires at least 1 argument(s) and no more than 3 argument(s).
          workspace.createVariable(varName, opt_type, false, opt_scope);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/variables.js:404: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Workspace.prototype.createVariable does not match formal parameter
found   : boolean
required: (string|undefined)
          workspace.createVariable(varName, opt_type, false, opt_scope);
                                                      ^^^^^

../core/variables.js:470: WARNING - [JSC_INEXISTENT_PROPERTY] Property varName never defined on String
            promptAndCheckWithAlert(newName.varName); // Recurse
                                            ^^^^^^^

../core/variables.js:596: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Node|null)
required: (Element|null)
  return fieldDom;
         ^^^^^^^^

../core/variables.js:659: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Blockly.VariableModel|null|undefined)
required: (Blockly.VariableModel|null)
  return variable;
         ^^^^^^^^

../core/variables.js:688: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Blockly.VariableModel|null)
required: Blockly.VariableModel
  return variable;
         ^^^^^^^^

../core/variables_dynamic.js:39: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Variables.createVariableButtonHandler does not match formal parameter
found   : null
required: (function((null|string)=): ?|undefined)
  Blockly.Variables.createVariableButtonHandler(button.getTargetWorkspace(), null, "String");
                                                                             ^^^^

../core/variables_dynamic.js:42: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Variables.createVariableButtonHandler does not match formal parameter
found   : null
required: (function((null|string)=): ?|undefined)
  Blockly.Variables.createVariableButtonHandler(button.getTargetWorkspace(), null, "Number");
                                                                             ^^^^

../core/variables_dynamic.js:45: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Variables.createVariableButtonHandler does not match formal parameter
found   : null
required: (function((null|string)=): ?|undefined)
  Blockly.Variables.createVariableButtonHandler(button.getTargetWorkspace(), null, "Colour");
                                                                             ^^^^

../core/variables_dynamic.js:92: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Variables.createVariableButtonHandler does not match formal parameter
found   : null
required: (function((null|string)=): ?|undefined)
        null,
        ^^^^

../core/variables_dynamic.js:135: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Variables.generateVariableFieldXmlString does not match formal parameter
found   : (Blockly.VariableModel|null)
required: Blockly.VariableModel
          Blockly.Variables.generateVariableFieldXmlString(firstVariable) +
                                                           ^^^^^^^^^^^^^

../core/variables_dynamic.js:146: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Variables.generateVariableFieldXmlString does not match formal parameter
found   : (Blockly.VariableModel|null)
required: Blockly.VariableModel
          Blockly.Variables.generateVariableFieldXmlString(firstVariable) +
                                                           ^^^^^^^^^^^^^

../core/warning.js:127: WARNING - [JSC_TYPE_MISMATCH] actual parameter 4 of Blockly.Bubble does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
        paragraph, this.block_.svgPath_, this.iconXY_, null, null);
                                         ^^^^^^^^^^^^

../core/warning.js:158: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property promote_ of Blockly.Bubble not allowed here.
  this.bubble_.promote_();
  ^^^^^^^^^^^^^^^^^^^^^

../core/workspace.js:44: WARNING - [JSC_TYPE_MISMATCH] assignment to property options of Blockly.Workspace
found   : (Blockly.Options|{})
required: Blockly.Options
  this.options = opt_options || {};
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace.js:112: WARNING - [JSC_TYPE_MISMATCH] assignment to property potentialVariableMap_ of Blockly.Workspace
found   : null
required: Blockly.VariableMap
  this.potentialVariableMap_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace.js:348: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Block.prototype.dispose: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
      this.topBlocks_[0].dispose();
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace.js:387: WARNING - [JSC_OPTIONAL_ARG_AT_END] optional arguments must be at the end
Blockly.Workspace.prototype.createVariable = function(name, opt_type, opt_id, opt_scope) {
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace.js:388: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.VariableMap.prototype.createVariable: called with 4 argument(s). Function requires at least 1 argument(s) and no more than 3 argument(s).
  return this.variableMap_.createVariable(name, opt_type, opt_id, opt_scope);
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace.js:417: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property deleteVariableInternal_ of Blockly.VariableMap not allowed here.
  this.variableMap_.deleteVariableInternal_(variable, uses);
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace.js:507: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.getAllBlocks: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
  var blocks = this.getAllBlocks();
               ^^^^^^^^^^^^^^^^^^^

../core/workspace.js:559: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.getAllBlocks: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
  return this.options.maxBlocks - this.getAllBlocks().length;
                                  ^^^^^^^^^^^^^^^^^^^

../core/workspace.js:572: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.Workspace.prototype.getBlocksByType: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
  return (this.options.maxInstances[type] || Infinity) - this.getBlocksByType(type).length;
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_audio.js:70: WARNING - [JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE] constant property SOUNDS_ assigned a value more than once
  this.SOUNDS_ = null;
  ^^^^^^^^^^^^

../core/workspace_comment.js:132: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace of Blockly.WorkspaceComment
found   : null
required: Blockly.Workspace
  this.workspace = null;
  ^^^^^^^^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:82: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property rendered_ of Blockly.WorkspaceCommentSvg not allowed here.
  if (this.rendered_) {
      ^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:90: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgGroup_ of Blockly.WorkspaceCommentSvg not allowed here.
  this.svgGroup_.appendChild(this.foreignObject_);
  ^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:92: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.utils.createSvgElement: called with 2 argument(s). Function requires at least 3 argument(s) and no more than 3 argument(s).
  this.svgHandleTarget_ = Blockly.utils.createSvgElement('rect',
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:98: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgGroup_ of Blockly.WorkspaceCommentSvg not allowed here.
  this.svgGroup_.appendChild(this.svgHandleTarget_);
  ^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:99: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.utils.createSvgElement: called with 2 argument(s). Function requires at least 3 argument(s) and no more than 3 argument(s).
  this.svgRectTarget_ = Blockly.utils.createSvgElement('rect',
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:107: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgGroup_ of Blockly.WorkspaceCommentSvg not allowed here.
  this.svgGroup_.appendChild(this.svgRectTarget_);
  ^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:121: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property rendered_ of Blockly.WorkspaceCommentSvg not allowed here.
  this.rendered_ = true;
  ^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:192: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgGroup_ of Blockly.WorkspaceCommentSvg not allowed here.
      this.svgGroup_);
      ^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:224: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property svgGroup_ of Blockly.WorkspaceCommentSvg not allowed here.
      this.svgGroup_);
      ^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:269: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property width_ of Blockly.WorkspaceComment not allowed here.
    this.workspace.RTL ? -this.width_ : this.width_, this.height_));
                          ^^^^^^^^^^^

../core/workspace_comment_render_svg.js:269: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property width_ of Blockly.WorkspaceComment not allowed here.
    this.workspace.RTL ? -this.width_ : this.width_, this.height_));
                                        ^^^^^^^^^^^

../core/workspace_comment_render_svg.js:269: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property height_ of Blockly.WorkspaceComment not allowed here.
    this.workspace.RTL ? -this.width_ : this.width_, this.height_));
                                                     ^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:299: WARNING - [JSC_INEXISTENT_PARAM] parameter e does not appear in Blockly.WorkspaceCommentSvg.prototype.deleteMouseOut_'s parameter list
Blockly.WorkspaceCommentSvg.prototype.deleteMouseOut_ = function(/*e*/) {
                                                        ^^^^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:313: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.WorkspaceCommentSvg.prototype.dispose: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
  this.dispose(true, true);
  ^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_comment_render_svg.js:383: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property width_ of Blockly.WorkspaceComment not allowed here.
  this.width_ = width;
  ^^^^^^^^^^^

../core/workspace_comment_render_svg.js:384: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property height_ of Blockly.WorkspaceComment not allowed here.
  this.height_ = height;
  ^^^^^^^^^^^^

../core/workspace_comment_svg.js:60: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.utils.createSvgElement: called with 2 argument(s). Function requires at least 3 argument(s) and no more than 3 argument(s).
  this.svgRect_ = Blockly.utils.createSvgElement(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_comment_svg.js:66: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property BORDER_RADIUS of Blockly.WorkspaceCommentSvg not allowed here.
        'rx': Blockly.WorkspaceCommentSvg.BORDER_RADIUS,
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_comment_svg.js:67: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property BORDER_RADIUS of Blockly.WorkspaceCommentSvg not allowed here.
        'ry': Blockly.WorkspaceCommentSvg.BORDER_RADIUS
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_comment_svg.js:125: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property disposeInternal_ of Blockly.WorkspaceCommentSvg not allowed here.
  this.disposeInternal_();
  ^^^^^^^^^^^^^^^^^^^^^

../core/workspace_comment_svg.js:210: WARNING - [JSC_TYPE_MISMATCH] assignment to property selected of Blockly
found   : Blockly.WorkspaceCommentSvg
required: (Blockly.Block|null)
  Blockly.selected = this;
  ^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_comment_svg.js:289: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.getRelativeXY does not match formal parameter
found   : Node
required: Element
      var xy = Blockly.utils.getRelativeXY(element);
                                           ^^^^^^^

../core/workspace_comment_svg.js:413: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.removeAttribute does not match formal parameter
found   : (Element|null)
required: Element
  Blockly.utils.removeAttribute(this.getSvgRoot(), 'transform');
                                ^^^^^^^^^^^^^^^^^

../core/workspace_comment_svg.js:557: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.WorkspaceCommentSvg.prototype.render: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      comment.render(false);
      ^^^^^^^^^^^^^^^^^^^^^

../core/workspace_comment_svg.js:572: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.WorkspaceComment.fireCreateEvent does not match formal parameter
found   : (Blockly.WorkspaceCommentSvg|undefined)
required: Blockly.WorkspaceComment
  Blockly.WorkspaceComment.fireCreateEvent(comment);
                                           ^^^^^^^

../core/workspace_comment_svg.js:574: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Blockly.WorkspaceCommentSvg|undefined)
required: Blockly.WorkspaceCommentSvg
  return comment;
         ^^^^^^^

../core/workspace_drag_surface_svg.js:126: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.getRelativeXY does not match formal parameter
found   : (Element|null)
required: Element
  return Blockly.utils.getRelativeXY(this.SVG_);
                                     ^^^^^^^^^

../core/workspace_drag_surface_svg.js:144: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.hasClass does not match formal parameter
found   : Node
required: Element
      !Blockly.utils.hasClass(blockCanvas, 'blocklyBlockCanvas') ||
                              ^^^^^^^^^^^

../core/workspace_drag_surface_svg.js:145: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.hasClass does not match formal parameter
found   : Node
required: Element
      !Blockly.utils.hasClass(bubbleCanvas, 'blocklyBubbleCanvas')) {
                              ^^^^^^^^^^^^

../core/workspace_drag_surface_svg.js:153: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.insertAfter does not match formal parameter
found   : Node
required: Element
    Blockly.utils.insertAfter(blockCanvas, this.previousSibling_);
                              ^^^^^^^^^^^

../core/workspace_drag_surface_svg.js:159: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.insertAfter does not match formal parameter
found   : Node
required: Element
  Blockly.utils.insertAfter(bubbleCanvas, blockCanvas);
                            ^^^^^^^^^^^^

../core/workspace_drag_surface_svg.js:159: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.utils.insertAfter does not match formal parameter
found   : Node
required: Element
  Blockly.utils.insertAfter(bubbleCanvas, blockCanvas);
                                          ^^^^^^^^^^^

../core/workspace_dragger.js:63: WARNING - [JSC_TYPE_MISMATCH] assignment to property workspace_ of Blockly.WorkspaceDragger
found   : null
required: Blockly.WorkspaceSvg
  this.workspace_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_events.js:54: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property group_ of Blockly.Events not allowed here.
  this.group = Blockly.Events.group_;
               ^^^^^^^^^^^^^^^^^^^^^

../core/workspace_events.js:59: WARNING - [JSC_MISSING_EXTENDS_TAG] Missing @extends tag on type Blockly.Events.FinishedLoading
goog.inherits(Blockly.Events.FinishedLoading, Blockly.Events.Abstract);
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:81: WARNING - [JSC_TYPE_MISMATCH] assignment to property useWorkspaceDragSurface_ of Blockly.WorkspaceSvg
found   : (boolean|null)
required: boolean
  this.useWorkspaceDragSurface_ = this.workspaceDragSurface_ && Blockly.utils.is3dSupported();
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:96: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.WorkspaceAudio does not match formal parameter
found   : (Blockly.Workspace|null)
required: (Blockly.WorkspaceSvg|null)
  this.audioManager_ = new Blockly.WorkspaceAudio(options.parentWorkspace);
                                                  ^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:325: WARNING - [JSC_TYPE_MISMATCH] assignment to property injectionDiv_ of Blockly.WorkspaceSvg.prototype
found   : null
required: Element
Blockly.WorkspaceSvg.prototype.injectionDiv_ = null;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:334: WARNING - [JSC_TYPE_MISMATCH] assignment to property lastRecordedPageScroll_ of Blockly.WorkspaceSvg.prototype
found   : null
required: goog.math.Coordinate
Blockly.WorkspaceSvg.prototype.lastRecordedPageScroll_ = null;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:357: WARNING - [JSC_TYPE_MISMATCH] assignment to property configureContextMenu of Blockly.WorkspaceSvg.prototype
found   : null
required: function(this:Blockly.WorkspaceSvg, Array<Object>): ?
Blockly.WorkspaceSvg.prototype.configureContextMenu = null;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:436: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.getRelativeXY does not match formal parameter
found   : Node
required: Element
    var xy = Blockly.utils.getRelativeXY(element);
                                         ^^^^^^^

../core/workspace_svg.js:443: WARNING - [JSC_TYPE_MISMATCH] assignment
found   : (Node|null)
required: Element
    element = element.parentNode;
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:457: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.utils.getInjectionDivXY_ does not match formal parameter
found   : (SVGElement|null)
required: Element
  return Blockly.utils.getInjectionDivXY_(this.svgBlockCanvas_);
                                          ^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:474: WARNING - [JSC_TYPE_MISMATCH] assignment to property injectionDiv_ of Blockly.WorkspaceSvg
found   : Node
required: Element
        this.injectionDiv_ = element;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:480: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : Node
required: Element
  return this.injectionDiv_;
         ^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:581: WARNING - [JSC_TYPE_MISMATCH] assignment to property flyout_ of Blockly.WorkspaceSvg
found   : null
required: Blockly.Flyout
    this.flyout_ = null;
    ^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:606: WARNING - [JSC_TYPE_MISMATCH] assignment to property toolboxCategoryCallbacks_ of Blockly.WorkspaceSvg
found   : null
required: Object<string,function(Blockly.Workspace): Array<Element>>
  this.toolboxCategoryCallbacks_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:607: WARNING - [JSC_TYPE_MISMATCH] assignment to property flyoutButtonCallbacks_ of Blockly.WorkspaceSvg
found   : null
required: Object<string,function(Blockly.FlyoutButton): ?>
  this.flyoutButtonCallbacks_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:633: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.BlockSvg: called with 4 argument(s). Function requires at least 2 argument(s) and no more than 3 argument(s).
  return new Blockly.BlockSvg(this, prototypeName, opt_id, opt_parent);
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:677: WARNING - [JSC_TYPE_MISMATCH] assignment to property flyout_ of Blockly.WorkspaceSvg
found   : null
required: Blockly.Flyout
  this.flyout_ = null;
  ^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:703: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property flyout_ of Blockly.Toolbox not allowed here.
    return this.toolbox_.flyout_;
           ^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:739: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Scrollbar.prototype.resizeContentHorizontal does not match formal parameter
found   : (Object|null)
required: Object
    this.scrollbar.hScroll.resizeContentHorizontal(metrics);
                                                   ^^^^^^^

../core/workspace_svg.js:740: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Scrollbar.prototype.resizeContentVertical does not match formal parameter
found   : (Object|null)
required: Object
    this.scrollbar.vScroll.resizeContentVertical(metrics);
                                                 ^^^^^^^

../core/workspace_svg.js:790: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (SVGElement|null)
required: Element
  return this.svgBlockCanvas_;
         ^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:798: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (SVGElement|null)
required: SVGGElement
  return this.svgBubbleCanvas_;
         ^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:813: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : Node
required: (Element|null)
      return element;
             ^^^^^^^

../core/workspace_svg.js:897: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.WorkspaceDragSurfaceSvg.prototype.setContentsAndShow does not match formal parameter
found   : (SVGElement|null)
required: Element
    this.svgBubbleCanvas_,
    ^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:898: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.WorkspaceDragSurfaceSvg.prototype.setContentsAndShow does not match formal parameter
found   : (Node|null)
required: (Element|null)
    previousElement,
    ^^^^^^^^^^^^^^^

../core/workspace_svg.js:1012: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Array.prototype.indexOf does not match formal parameter
found   : Blockly.Block
required: Blockly.BlockSvg
    } else if (this.highlightedBlocks_.indexOf(block) == -1) {
                                               ^^^^^

../core/workspace_svg.js:1013: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Array.prototype.push does not match formal parameter
found   : Blockly.Block
required: (Blockly.BlockSvg|undefined)
      this.highlightedBlocks_.push(block);
                                   ^^^^^

../core/workspace_svg.js:1066: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property getConnections_ of Blockly.Block not allowed here.
          var connections = block.getConnections_(false);
                            ^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1136: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property flyout_ of Blockly.Toolbox not allowed here.
  if (ws && !ws.currentGesture_ && ws.toolbox_ && ws.toolbox_.flyout_) {
                                                  ^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1236: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.utils.mouseToSvg does not match formal parameter
found   : (Element|null)
required: Element
  var point = Blockly.utils.mouseToSvg(e, this.getParentSvg(), this.getInverseScreenCTM());
                                          ^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1240: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of goog.math.Coordinate.difference does not match formal parameter
found   : SVGPoint
required: goog.math.Coordinate
  this.dragDeltaXY_ = goog.math.Coordinate.difference(xy, point);
                                                          ^^^^^

../core/workspace_svg.js:1249: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.utils.mouseToSvg does not match formal parameter
found   : (Element|null)
required: Element
  var point = Blockly.utils.mouseToSvg(e, this.getParentSvg(), this.getInverseScreenCTM());
                                          ^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1253: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of goog.math.Coordinate.sum does not match formal parameter
found   : (goog.math.Coordinate|null)
required: goog.math.Coordinate
  return goog.math.Coordinate.sum(this.dragDeltaXY_, point);
                                  ^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1253: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of goog.math.Coordinate.sum does not match formal parameter
found   : SVGPoint
required: goog.math.Coordinate
  return goog.math.Coordinate.sum(this.dragDeltaXY_, point);
                                                     ^^^^^

../core/workspace_svg.js:1334: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.utils.mouseToSvg does not match formal parameter
found   : (Element|null)
required: Element
    var position = Blockly.utils.mouseToSvg(e, this.getParentSvg(), this.getInverseScreenCTM());
                                               ^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1590: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property populate_ of Blockly.Toolbox not allowed here.
    var openNode = this.toolbox_.populate_(tree);
                   ^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1591: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property addColour_ of Blockly.Toolbox not allowed here.
    this.toolbox_.addColour_();
    ^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1599: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Flyout.prototype.show does not match formal parameter
found   : NodeList<Node>
required: (Array|string)
    this.flyout_.show(tree.childNodes);
                      ^^^^^^^^^^^^^^^

../core/workspace_svg.js:1689: WARNING - [JSC_REDECLARED_VARIABLE] Redeclared variable: matrix
  var matrix = matrix.translate(x * (1 - scaleChange), y * (1 - scaleChange)).scale(scaleChange);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1747: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property height_ of Blockly.Flyout not allowed here.
      workspaceHeight += this.flyout_.height_;
                         ^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1749: WARNING - [JSC_BAD_PROTECTED_PROPERTY_ACCESS] Access to protected property height_ of Blockly.Flyout not allowed here.
      blocksHeight += this.flyout_.height_ / this.scale;
                      ^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:1831: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Workspace.prototype.getBlockById does not match formal parameter
found   : (null|string)
required: string
  var block = this.getBlockById(id);
                                ^^

../core/workspace_svg.js:1968: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.WidgetDiv.hide: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
  Blockly.WidgetDiv.hide(true);
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:2127: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.svgSize does not match formal parameter
found   : (Element|null)
required: Element
  var svgSize = Blockly.svgSize(this.getParentSvg());
                                ^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:2283: WARNING - [JSC_TYPE_MISMATCH] assignment
found   : null
required: function(Blockly.FlyoutButton): ?
  this.flyoutButtonCallbacks_[key] = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/workspace_svg.js:2318: WARNING - [JSC_TYPE_MISMATCH] assignment
found   : null
required: function(Blockly.Workspace): Array<Element>
  this.toolboxCategoryCallbacks_[key] = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/ws_comment_events.js:67: WARNING - [JSC_BAD_PRIVATE_PROPERTY_ACCESS] Access to private property group_ of Blockly.Events not allowed here.
  this.group = Blockly.Events.group_;
               ^^^^^^^^^^^^^^^^^^^^^

../core/ws_comment_events.js:233: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Blockly.Xml.domToWorkspace does not match formal parameter
found   : (Blockly.Workspace|null)
required: Blockly.Workspace
    Blockly.Xml.domToWorkspace(xml, workspace);
                                    ^^^^^^^^^

../core/ws_comment_events.js:237: WARNING - [JSC_WRONG_ARGUMENT_COUNT] Function Blockly.WorkspaceComment.prototype.dispose: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      comment.dispose(false, false);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/ws_comment_events.js:323: WARNING - [JSC_TYPE_MISMATCH] assignment to property newCoordinate_ of Blockly.Events.CommentMove
found   : null
required: goog.math.Coordinate
  this.newCoordinate_ = null;
  ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/xml.js:129: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Element.prototype.setAttribute does not match formal parameter
found   : (string|undefined)
required: (TrustedHTML|TrustedScriptURL|TrustedURL|boolean|number|string)
  container.setAttribute('name', field.name);
                                 ^^^^^^^^^^

../core/xml.js:145: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Xml.fieldToDomVariable_ does not match formal parameter
found   : Blockly.Field
required: Blockly.FieldVariable
      return Blockly.Xml.fieldToDomVariable_(field);
                                             ^^^^^

../core/xml.js:244: WARNING - [JSC_TYPE_MISMATCH] actual parameter 2 of Element.prototype.setAttribute does not match formal parameter
found   : (boolean|undefined)
required: (TrustedHTML|TrustedScriptURL|TrustedURL|boolean|number|string)
    element.setAttribute('inline', block.inputsInline);
                                   ^^^^^^^^^^^^^^^^^^

../core/xml.js:365: WARNING - [JSC_INEXISTENT_PROPERTY] Property documentElement never defined on Element
  if (!doc || !doc.documentElement ||
                   ^^^^^^^^^^^^^^^

../core/xml.js:397: WARNING - [JSC_TYPE_MISMATCH] assignment
found   : Blockly.Workspace
required: Element
    xml = workspace;
    ^^^^^^^^^^^^^^^

../core/xml.js:432: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Xml.domToBlock does not match formal parameter
found   : Node
required: Element
        var block = Blockly.Xml.domToBlock(xmlChild, workspace);
                                           ^^^^^^^^

../core/xml.js:446: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.WorkspaceCommentSvg.fromXml does not match formal parameter
found   : Node
required: Element
          Blockly.WorkspaceCommentSvg.fromXml(xmlChild, workspace, width);
                                              ^^^^^^^^

../core/xml.js:448: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.WorkspaceComment.fromXml does not match formal parameter
found   : Node
required: Element
          Blockly.WorkspaceComment.fromXml(xmlChild, workspace);
                                           ^^^^^^^^

../core/xml.js:452: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Xml.domToVariables does not match formal parameter
found   : Node
required: Element
          Blockly.Xml.domToVariables(xmlChild, workspace);
                                     ^^^^^^^^

../core/xml.js:471: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Events.fire does not match formal parameter
found   : Blockly.Events.FinishedLoading
required: Blockly.Events.Abstract
  Blockly.Events.fire(new Blockly.Events.FinishedLoading(workspace));
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/xml.js:492: WARNING - [JSC_CONSTANT_PROPERTY_REASSIGNED_VALUE] constant property TAB_WIDTH assigned a value more than once
      Blockly.BlockSvg.TAB_WIDTH = savetab;
      ^^^^^^^^^^^^^^^^^^^^^^^^^^

../core/xml.js:540: WARNING - [JSC_TYPE_MISMATCH] assignment
found   : Blockly.Workspace
required: Element
    xmlBlock = workspace;
    ^^^^^^^^^^^^^^^^^^^^

../core/xml.js:549: WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of Blockly.Xml.domToBlockHeadless_ does not match formal parameter
found   : (Blockly.Workspace|Element)
required: Element
    var topBlock = Blockly.Xml.domToBlockHeadless_(xmlBlock, workspace);
                                                   ^^^^^^^^

../core/xml.js:605: WARNING - [JSC_INEXISTENT_PROPERTY] Property ELEMENT_NODE never defined on Element
    if (xmlChild.nodeType != Element.ELEMENT_NODE) {
                                     ^^^^^^^^^^^^

../core/xml.js:699: WARNING - [JSC_TYPE_MISMATCH] actual parameter 3 of Blockly.Xml.domToField_ does not match formal parameter
found   : Node
required: Element
        Blockly.Xml.domToField_(block, name, xmlChild);
                                             ^^^^^^^^

../core/xml.js:841: WARNING - [JSC_TYPE_MISMATCH] actual parameter 4 of Blockly.Xml.domToFieldVariable_ does not match formal parameter
found   : Blockly.Field
required: Blockly.FieldVariable
    Blockly.Xml.domToFieldVariable_(workspace, xml, text, field);
                                                          ^^^^^

../core/xml_utils.js:67: WARNING - [JSC_TYPE_MISMATCH] inconsistent return type
found   : (Document|null)
required: Element
  return oParser.parseFromString(text, 'text/xml');
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

0 error(s), 886 warning(s), 95.6% typed
